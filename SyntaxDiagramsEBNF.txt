Program ::= 'program' 'id' ';' Vars? Funcion* Main
Vars ::= 'var' ((('file' 'id' (',' 'id')*) | (TipoSimple 'id' ('[' 'cte_i' ']' ('[' 'cte_i' ']')? )? ) ) ';' )+
Funcion ::= 'func' (TipoSimple | void) 'id' '(' Params ')' ';' Vars? Bloque
Main ::= 'main' Bloque
TipoSimple ::= 'int' | 'float' 
Params ::= TipoSimple 'id' (',' TipoSimple 'id' )*
Bloque ::= '{' Estatuto+ '}'
Estatuto ::= Asignacion | Llamada | Read | Escritura | Condicion | Ciclo
Asignacion ::= Variable '=' Exp
Llamada ::= 'id' '(' Exp (',' Exp)* ')'
Read ::= 'read' 'file'
Escritura ::= 'write' '(' (Exp | 'cte_s') (',' (Exp | 'cte_s'))* ')'
Condicion ::= 'if' '(' Exp ')' Bloque ('else' Bloque)?
Ciclo ::= 'from' Exp 'to' Exp 'do' Bloque
Variable ::= 'id' ('[' Exp ']' ('[' Exp ']')? )?
Exp ::= Exp1 ('|' Exp1)*
Exp1 ::= Exp2 ('&' Exp2)*
Exp2 ::= Exp3 (('<' | '>' | '<>' | '==') Exp3)?
Exp3 ::= Termino (('+' | '-') Termino)*
Termino ::= (Factor | Llamada) (('*' | '/') (Factor | Llamada))*
Factor ::= '(' Exp ')' | 'cte_i' | 'cte_f' | Variable