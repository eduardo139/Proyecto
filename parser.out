Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM programNP1 ID programNP2 SEMICOLON programA programB main
Rule 2     programNP1 -> <empty>
Rule 3     programNP2 -> <empty>
Rule 4     programA -> vars
Rule 5     programA -> empty
Rule 6     programB -> funcion programB
Rule 7     programB -> empty
Rule 8     vars -> varsNP1 VAR varsA varsNP7
Rule 9     varsNP7 -> <empty>
Rule 10    varsNP1 -> <empty>
Rule 11    varsA -> varsB SEMICOLON varsF
Rule 12    varsB -> FILE varsNP2 ID varsNP3 varsNP6 varsE
Rule 13    varsB -> tipoSimple varsNP2 ID varsNP3 varsC varsNP6
Rule 14    varsNP2 -> <empty>
Rule 15    varsNP6 -> <empty>
Rule 16    varsC -> LEFTBRACKET CTI varsNP4 RIGHTBRACKET varsD
Rule 17    varsC -> empty
Rule 18    varsNP4 -> <empty>
Rule 19    varsD -> LEFTBRACKET CTI varsNP5 RIGHTBRACKET
Rule 20    varsD -> empty
Rule 21    varsNP5 -> <empty>
Rule 22    varsE -> COMMA ID varsNP3 varsNP6 varsE
Rule 23    varsE -> empty
Rule 24    varsNP3 -> <empty>
Rule 25    varsF -> varsA
Rule 26    varsF -> empty
Rule 27    funcion -> FUNC funcionA funcionNP1 ID funcionNP2 LEFTPAR funcionB RIGHTPAR SEMICOLON funcionC bloque
Rule 28    funcionNP1 -> <empty>
Rule 29    funcionNP2 -> <empty>
Rule 30    funcionA -> tipoSimple funcionANP1
Rule 31    funcionA -> VOID funcionANP1
Rule 32    funcionANP1 -> <empty>
Rule 33    funcionB -> params
Rule 34    funcionB -> empty
Rule 35    funcionC -> vars
Rule 36    funcionC -> empty
Rule 37    main -> MAINSTART mainNP1 bloque
Rule 38    mainNP1 -> <empty>
Rule 39    tipoSimple -> INT tipoSimpleNP1
Rule 40    tipoSimple -> FLOAT tipoSimpleNP1
Rule 41    tipoSimpleNP1 -> <empty>
Rule 42    params -> tipoSimple paramsNP1 ID paramsA
Rule 43    paramsA -> COMMA tipoSimple paramsNP1 ID paramsA
Rule 44    paramsA -> empty
Rule 45    paramsNP1 -> <empty>
Rule 46    bloque -> LEFTCURLY bloqueA RIGHTCURLY
Rule 47    bloqueA -> estatuto bloqueA
Rule 48    bloqueA -> empty
Rule 49    estatuto -> estatutoNP1 estatutoA
Rule 50    estatutoA -> asignacion
Rule 51    estatutoA -> llamada
Rule 52    estatutoA -> read
Rule 53    estatutoA -> escritura
Rule 54    estatutoA -> condicion
Rule 55    estatutoA -> ciclo
Rule 56    estatutoNP1 -> <empty>
Rule 57    asignacion -> variable ASSIGNOP asignacionNP1 exp asignacionNP2
Rule 58    asignacionNP1 -> <empty>
Rule 59    asignacionNP2 -> <empty>
Rule 60    llamada -> ID llamadaNP1 LEFTPAR loeNP2 primerparam llamadaA RIGHTPAR llamadaNP3
Rule 61    primerparam -> exp loeNP1
Rule 62    primerparam -> empty
Rule 63    llamadaA -> COMMA exp loeNP1 llamadaA
Rule 64    llamadaA -> empty
Rule 65    llamadaNP1 -> <empty>
Rule 66    llamadaNP3 -> <empty>
Rule 67    read -> READ ID readNP1
Rule 68    readNP1 -> <empty>
Rule 69    escritura -> WRITE escrituraNP1 LEFTPAR loeNP2 escrituraA escrituraB RIGHTPAR escrituraNP3
Rule 70    escrituraNP1 -> <empty>
Rule 71    escrituraNP3 -> <empty>
Rule 72    loeNP2 -> <empty>
Rule 73    escrituraA -> exp loeNP1
Rule 74    escrituraA -> CTSTRING escrituraNP2
Rule 75    loeNP1 -> <empty>
Rule 76    escrituraNP2 -> <empty>
Rule 77    escrituraB -> COMMA escrituraA escrituraB
Rule 78    escrituraB -> empty
Rule 79    condicion -> IF LEFTPAR exp condicionNP1 RIGHTPAR bloque condicionA
Rule 80    condicionNP1 -> <empty>
Rule 81    condicionA -> ELSE condicionANP1 bloque condicionANP2
Rule 82    condicionA -> empty
Rule 83    condicionANP1 -> <empty>
Rule 84    condicionANP2 -> <empty>
Rule 85    ciclo -> FROM exp TO exp DO bloque
Rule 86    variable -> ID variableNP1 variableA
Rule 87    variableNP1 -> <empty>
Rule 88    variableA -> LEFTBRACKET exp RIGHTBRACKET variableB
Rule 89    variableA -> empty
Rule 90    variableB -> LEFTBRACKET exp RIGHTBRACKET
Rule 91    variableB -> empty
Rule 92    exp -> exp1 expA
Rule 93    expNP1 -> <empty>
Rule 94    expA -> OROP operNP1 exp1 expNP1 expA
Rule 95    expA -> empty
Rule 96    exp1 -> exp2 exp1A
Rule 97    exp1NP1 -> <empty>
Rule 98    exp1A -> ANDOP operNP1 exp2 exp1NP1 exp1A
Rule 99    exp1A -> empty
Rule 100   exp2 -> exp3 exp2A
Rule 101   exp2A -> exp2B operNP1 exp3 exp2ANP1
Rule 102   exp2A -> empty
Rule 103   exp2ANP1 -> <empty>
Rule 104   exp2B -> LESSTHANOP
Rule 105   exp2B -> GREATERTHANOP
Rule 106   exp2B -> DIFFERENTOP
Rule 107   exp2B -> EQUALOP
Rule 108   exp3 -> termino exp3A
Rule 109   exp3NP1 -> <empty>
Rule 110   exp3A -> exp3B operNP1 termino exp3NP1 exp3A
Rule 111   exp3A -> empty
Rule 112   exp3B -> SUMOP
Rule 113   exp3B -> SUBOP
Rule 114   termino -> terminoC terminoA
Rule 115   terminoA -> terminoB operNP1 terminoC terminoANP1 terminoA
Rule 116   terminoA -> empty
Rule 117   terminoANP1 -> <empty>
Rule 118   terminoB -> MULOP
Rule 119   terminoB -> DIVOP
Rule 120   terminoC -> factor
Rule 121   terminoC -> llamada
Rule 122   factor -> LEFTPAR operNP1 exp RIGHTPAR factorNP1
Rule 123   factor -> CTI factorNP2
Rule 124   factor -> CTF factorNP3
Rule 125   factor -> variable
Rule 126   operNP1 -> <empty>
Rule 127   factorNP1 -> <empty>
Rule 128   factorNP2 -> <empty>
Rule 129   factorNP3 -> <empty>
Rule 130   empty -> <empty>

Terminals, with rules where they appear

ANDOP                : 98
ASSIGNOP             : 57
COMMA                : 22 43 63 77
CTF                  : 124
CTI                  : 16 19 123
CTSTRING             : 74
DIFFERENTOP          : 106
DIVOP                : 119
DO                   : 85
ELSE                 : 81
EQUALOP              : 107
FILE                 : 12
FLOAT                : 40
FROM                 : 85
FUNC                 : 27
GREATERTHANOP        : 105
ID                   : 1 12 13 22 27 42 43 60 67 86
IF                   : 79
INT                  : 39
LEFTBRACKET          : 16 19 88 90
LEFTCURLY            : 46
LEFTPAR              : 27 60 69 79 122
LESSTHANOP           : 104
MAINSTART            : 37
MULOP                : 118
OROP                 : 94
PROGRAM              : 1
READ                 : 67
RIGHTBRACKET         : 16 19 88 90
RIGHTCURLY           : 46
RIGHTPAR             : 27 60 69 79 122
SEMICOLON            : 1 11 27
SUBOP                : 113
SUMOP                : 112
TO                   : 85
VAR                  : 8
VOID                 : 31
WRITE                : 69
error                : 

Nonterminals, with rules where they appear

asignacion           : 50
asignacionNP1        : 57
asignacionNP2        : 57
bloque               : 27 37 79 81 85
bloqueA              : 46 47
ciclo                : 55
condicion            : 54
condicionA           : 79
condicionANP1        : 81
condicionANP2        : 81
condicionNP1         : 79
empty                : 5 7 17 20 23 26 34 36 44 48 62 64 78 82 89 91 95 99 102 111 116
escritura            : 53
escrituraA           : 69 77
escrituraB           : 69 77
escrituraNP1         : 69
escrituraNP2         : 74
escrituraNP3         : 69
estatuto             : 47
estatutoA            : 49
estatutoNP1          : 49
exp                  : 57 61 63 73 79 85 85 88 90 122
exp1                 : 92 94
exp1A                : 96 98
exp1NP1              : 98
exp2                 : 96 98
exp2A                : 100
exp2ANP1             : 101
exp2B                : 101
exp3                 : 100 101
exp3A                : 108 110
exp3B                : 110
exp3NP1              : 110
expA                 : 92 94
expNP1               : 94
factor               : 120
factorNP1            : 122
factorNP2            : 123
factorNP3            : 124
funcion              : 6
funcionA             : 27
funcionANP1          : 30 31
funcionB             : 27
funcionC             : 27
funcionNP1           : 27
funcionNP2           : 27
llamada              : 51 121
llamadaA             : 60 63
llamadaNP1           : 60
llamadaNP3           : 60
loeNP1               : 61 63 73
loeNP2               : 60 69
main                 : 1
mainNP1              : 37
operNP1              : 94 98 101 110 115 122
params               : 33
paramsA              : 42 43
paramsNP1            : 42 43
primerparam          : 60
program              : 0
programA             : 1
programB             : 1 6
programNP1           : 1
programNP2           : 1
read                 : 52
readNP1              : 67
termino              : 108 110
terminoA             : 114 115
terminoANP1          : 115
terminoB             : 115
terminoC             : 114 115
tipoSimple           : 13 30 42 43
tipoSimpleNP1        : 39 40
variable             : 57 125
variableA            : 86
variableB            : 88
variableNP1          : 86
vars                 : 4 35
varsA                : 8 25
varsB                : 11
varsC                : 13
varsD                : 16
varsE                : 12 22
varsF                : 11
varsNP1              : 8
varsNP2              : 12 13
varsNP3              : 12 13 22
varsNP4              : 16
varsNP5              : 19
varsNP6              : 12 13 22
varsNP7              : 8

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM programNP1 ID programNP2 SEMICOLON programA programB main

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . programNP1 ID programNP2 SEMICOLON programA programB main
    (2) programNP1 -> .

    ID              reduce using rule 2 (programNP1 -> .)

    programNP1                     shift and go to state 3

state 3

    (1) program -> PROGRAM programNP1 . ID programNP2 SEMICOLON programA programB main

    ID              shift and go to state 4


state 4

    (1) program -> PROGRAM programNP1 ID . programNP2 SEMICOLON programA programB main
    (3) programNP2 -> .

    SEMICOLON       reduce using rule 3 (programNP2 -> .)

    programNP2                     shift and go to state 5

state 5

    (1) program -> PROGRAM programNP1 ID programNP2 . SEMICOLON programA programB main

    SEMICOLON       shift and go to state 6


state 6

    (1) program -> PROGRAM programNP1 ID programNP2 SEMICOLON . programA programB main
    (4) programA -> . vars
    (5) programA -> . empty
    (8) vars -> . varsNP1 VAR varsA varsNP7
    (130) empty -> .
    (10) varsNP1 -> .

    FUNC            reduce using rule 130 (empty -> .)
    MAINSTART       reduce using rule 130 (empty -> .)
    VAR             reduce using rule 10 (varsNP1 -> .)

    programA                       shift and go to state 7
    vars                           shift and go to state 8
    empty                          shift and go to state 9
    varsNP1                        shift and go to state 10

state 7

    (1) program -> PROGRAM programNP1 ID programNP2 SEMICOLON programA . programB main
    (6) programB -> . funcion programB
    (7) programB -> . empty
    (27) funcion -> . FUNC funcionA funcionNP1 ID funcionNP2 LEFTPAR funcionB RIGHTPAR SEMICOLON funcionC bloque
    (130) empty -> .

    FUNC            shift and go to state 14
    MAINSTART       reduce using rule 130 (empty -> .)

    programB                       shift and go to state 11
    funcion                        shift and go to state 12
    empty                          shift and go to state 13

state 8

    (4) programA -> vars .

    FUNC            reduce using rule 4 (programA -> vars .)
    MAINSTART       reduce using rule 4 (programA -> vars .)


state 9

    (5) programA -> empty .

    FUNC            reduce using rule 5 (programA -> empty .)
    MAINSTART       reduce using rule 5 (programA -> empty .)


state 10

    (8) vars -> varsNP1 . VAR varsA varsNP7

    VAR             shift and go to state 15


state 11

    (1) program -> PROGRAM programNP1 ID programNP2 SEMICOLON programA programB . main
    (37) main -> . MAINSTART mainNP1 bloque

    MAINSTART       shift and go to state 17

    main                           shift and go to state 16

state 12

    (6) programB -> funcion . programB
    (6) programB -> . funcion programB
    (7) programB -> . empty
    (27) funcion -> . FUNC funcionA funcionNP1 ID funcionNP2 LEFTPAR funcionB RIGHTPAR SEMICOLON funcionC bloque
    (130) empty -> .

    FUNC            shift and go to state 14
    MAINSTART       reduce using rule 130 (empty -> .)

    funcion                        shift and go to state 12
    programB                       shift and go to state 18
    empty                          shift and go to state 13

state 13

    (7) programB -> empty .

    MAINSTART       reduce using rule 7 (programB -> empty .)


state 14

    (27) funcion -> FUNC . funcionA funcionNP1 ID funcionNP2 LEFTPAR funcionB RIGHTPAR SEMICOLON funcionC bloque
    (30) funcionA -> . tipoSimple funcionANP1
    (31) funcionA -> . VOID funcionANP1
    (39) tipoSimple -> . INT tipoSimpleNP1
    (40) tipoSimple -> . FLOAT tipoSimpleNP1

    VOID            shift and go to state 21
    INT             shift and go to state 22
    FLOAT           shift and go to state 23

    funcionA                       shift and go to state 19
    tipoSimple                     shift and go to state 20

state 15

    (8) vars -> varsNP1 VAR . varsA varsNP7
    (11) varsA -> . varsB SEMICOLON varsF
    (12) varsB -> . FILE varsNP2 ID varsNP3 varsNP6 varsE
    (13) varsB -> . tipoSimple varsNP2 ID varsNP3 varsC varsNP6
    (39) tipoSimple -> . INT tipoSimpleNP1
    (40) tipoSimple -> . FLOAT tipoSimpleNP1

    FILE            shift and go to state 26
    INT             shift and go to state 22
    FLOAT           shift and go to state 23

    varsA                          shift and go to state 24
    varsB                          shift and go to state 25
    tipoSimple                     shift and go to state 27

state 16

    (1) program -> PROGRAM programNP1 ID programNP2 SEMICOLON programA programB main .

    $end            reduce using rule 1 (program -> PROGRAM programNP1 ID programNP2 SEMICOLON programA programB main .)


state 17

    (37) main -> MAINSTART . mainNP1 bloque
    (38) mainNP1 -> .

    LEFTCURLY       reduce using rule 38 (mainNP1 -> .)

    mainNP1                        shift and go to state 28

state 18

    (6) programB -> funcion programB .

    MAINSTART       reduce using rule 6 (programB -> funcion programB .)


state 19

    (27) funcion -> FUNC funcionA . funcionNP1 ID funcionNP2 LEFTPAR funcionB RIGHTPAR SEMICOLON funcionC bloque
    (28) funcionNP1 -> .

    ID              reduce using rule 28 (funcionNP1 -> .)

    funcionNP1                     shift and go to state 29

state 20

    (30) funcionA -> tipoSimple . funcionANP1
    (32) funcionANP1 -> .

    ID              reduce using rule 32 (funcionANP1 -> .)

    funcionANP1                    shift and go to state 30

state 21

    (31) funcionA -> VOID . funcionANP1
    (32) funcionANP1 -> .

    ID              reduce using rule 32 (funcionANP1 -> .)

    funcionANP1                    shift and go to state 31

state 22

    (39) tipoSimple -> INT . tipoSimpleNP1
    (41) tipoSimpleNP1 -> .

    ID              reduce using rule 41 (tipoSimpleNP1 -> .)

    tipoSimpleNP1                  shift and go to state 32

state 23

    (40) tipoSimple -> FLOAT . tipoSimpleNP1
    (41) tipoSimpleNP1 -> .

    ID              reduce using rule 41 (tipoSimpleNP1 -> .)

    tipoSimpleNP1                  shift and go to state 33

state 24

    (8) vars -> varsNP1 VAR varsA . varsNP7
    (9) varsNP7 -> .

    FUNC            reduce using rule 9 (varsNP7 -> .)
    MAINSTART       reduce using rule 9 (varsNP7 -> .)
    LEFTCURLY       reduce using rule 9 (varsNP7 -> .)

    varsNP7                        shift and go to state 34

state 25

    (11) varsA -> varsB . SEMICOLON varsF

    SEMICOLON       shift and go to state 35


state 26

    (12) varsB -> FILE . varsNP2 ID varsNP3 varsNP6 varsE
    (14) varsNP2 -> .

    ID              reduce using rule 14 (varsNP2 -> .)

    varsNP2                        shift and go to state 36

state 27

    (13) varsB -> tipoSimple . varsNP2 ID varsNP3 varsC varsNP6
    (14) varsNP2 -> .

    ID              reduce using rule 14 (varsNP2 -> .)

    varsNP2                        shift and go to state 37

state 28

    (37) main -> MAINSTART mainNP1 . bloque
    (46) bloque -> . LEFTCURLY bloqueA RIGHTCURLY

    LEFTCURLY       shift and go to state 39

    bloque                         shift and go to state 38

state 29

    (27) funcion -> FUNC funcionA funcionNP1 . ID funcionNP2 LEFTPAR funcionB RIGHTPAR SEMICOLON funcionC bloque

    ID              shift and go to state 40


state 30

    (30) funcionA -> tipoSimple funcionANP1 .

    ID              reduce using rule 30 (funcionA -> tipoSimple funcionANP1 .)


state 31

    (31) funcionA -> VOID funcionANP1 .

    ID              reduce using rule 31 (funcionA -> VOID funcionANP1 .)


state 32

    (39) tipoSimple -> INT tipoSimpleNP1 .

    ID              reduce using rule 39 (tipoSimple -> INT tipoSimpleNP1 .)


state 33

    (40) tipoSimple -> FLOAT tipoSimpleNP1 .

    ID              reduce using rule 40 (tipoSimple -> FLOAT tipoSimpleNP1 .)


state 34

    (8) vars -> varsNP1 VAR varsA varsNP7 .

    FUNC            reduce using rule 8 (vars -> varsNP1 VAR varsA varsNP7 .)
    MAINSTART       reduce using rule 8 (vars -> varsNP1 VAR varsA varsNP7 .)
    LEFTCURLY       reduce using rule 8 (vars -> varsNP1 VAR varsA varsNP7 .)


state 35

    (11) varsA -> varsB SEMICOLON . varsF
    (25) varsF -> . varsA
    (26) varsF -> . empty
    (11) varsA -> . varsB SEMICOLON varsF
    (130) empty -> .
    (12) varsB -> . FILE varsNP2 ID varsNP3 varsNP6 varsE
    (13) varsB -> . tipoSimple varsNP2 ID varsNP3 varsC varsNP6
    (39) tipoSimple -> . INT tipoSimpleNP1
    (40) tipoSimple -> . FLOAT tipoSimpleNP1

    FUNC            reduce using rule 130 (empty -> .)
    MAINSTART       reduce using rule 130 (empty -> .)
    LEFTCURLY       reduce using rule 130 (empty -> .)
    FILE            shift and go to state 26
    INT             shift and go to state 22
    FLOAT           shift and go to state 23

    varsB                          shift and go to state 25
    varsF                          shift and go to state 41
    varsA                          shift and go to state 42
    empty                          shift and go to state 43
    tipoSimple                     shift and go to state 27

state 36

    (12) varsB -> FILE varsNP2 . ID varsNP3 varsNP6 varsE

    ID              shift and go to state 44


state 37

    (13) varsB -> tipoSimple varsNP2 . ID varsNP3 varsC varsNP6

    ID              shift and go to state 45


state 38

    (37) main -> MAINSTART mainNP1 bloque .

    $end            reduce using rule 37 (main -> MAINSTART mainNP1 bloque .)


state 39

    (46) bloque -> LEFTCURLY . bloqueA RIGHTCURLY
    (47) bloqueA -> . estatuto bloqueA
    (48) bloqueA -> . empty
    (49) estatuto -> . estatutoNP1 estatutoA
    (130) empty -> .
    (56) estatutoNP1 -> .

    RIGHTCURLY      reduce using rule 130 (empty -> .)
    ID              reduce using rule 56 (estatutoNP1 -> .)
    READ            reduce using rule 56 (estatutoNP1 -> .)
    WRITE           reduce using rule 56 (estatutoNP1 -> .)
    IF              reduce using rule 56 (estatutoNP1 -> .)
    FROM            reduce using rule 56 (estatutoNP1 -> .)

    bloqueA                        shift and go to state 46
    estatuto                       shift and go to state 47
    empty                          shift and go to state 48
    estatutoNP1                    shift and go to state 49

state 40

    (27) funcion -> FUNC funcionA funcionNP1 ID . funcionNP2 LEFTPAR funcionB RIGHTPAR SEMICOLON funcionC bloque
    (29) funcionNP2 -> .

    LEFTPAR         reduce using rule 29 (funcionNP2 -> .)

    funcionNP2                     shift and go to state 50

state 41

    (11) varsA -> varsB SEMICOLON varsF .

    FUNC            reduce using rule 11 (varsA -> varsB SEMICOLON varsF .)
    MAINSTART       reduce using rule 11 (varsA -> varsB SEMICOLON varsF .)
    LEFTCURLY       reduce using rule 11 (varsA -> varsB SEMICOLON varsF .)


state 42

    (25) varsF -> varsA .

    FUNC            reduce using rule 25 (varsF -> varsA .)
    MAINSTART       reduce using rule 25 (varsF -> varsA .)
    LEFTCURLY       reduce using rule 25 (varsF -> varsA .)


state 43

    (26) varsF -> empty .

    FUNC            reduce using rule 26 (varsF -> empty .)
    MAINSTART       reduce using rule 26 (varsF -> empty .)
    LEFTCURLY       reduce using rule 26 (varsF -> empty .)


state 44

    (12) varsB -> FILE varsNP2 ID . varsNP3 varsNP6 varsE
    (24) varsNP3 -> .

    COMMA           reduce using rule 24 (varsNP3 -> .)
    SEMICOLON       reduce using rule 24 (varsNP3 -> .)

    varsNP3                        shift and go to state 51

state 45

    (13) varsB -> tipoSimple varsNP2 ID . varsNP3 varsC varsNP6
    (24) varsNP3 -> .

    LEFTBRACKET     reduce using rule 24 (varsNP3 -> .)
    SEMICOLON       reduce using rule 24 (varsNP3 -> .)

    varsNP3                        shift and go to state 52

state 46

    (46) bloque -> LEFTCURLY bloqueA . RIGHTCURLY

    RIGHTCURLY      shift and go to state 53


state 47

    (47) bloqueA -> estatuto . bloqueA
    (47) bloqueA -> . estatuto bloqueA
    (48) bloqueA -> . empty
    (49) estatuto -> . estatutoNP1 estatutoA
    (130) empty -> .
    (56) estatutoNP1 -> .

    RIGHTCURLY      reduce using rule 130 (empty -> .)
    ID              reduce using rule 56 (estatutoNP1 -> .)
    READ            reduce using rule 56 (estatutoNP1 -> .)
    WRITE           reduce using rule 56 (estatutoNP1 -> .)
    IF              reduce using rule 56 (estatutoNP1 -> .)
    FROM            reduce using rule 56 (estatutoNP1 -> .)

    estatuto                       shift and go to state 47
    bloqueA                        shift and go to state 54
    empty                          shift and go to state 48
    estatutoNP1                    shift and go to state 49

state 48

    (48) bloqueA -> empty .

    RIGHTCURLY      reduce using rule 48 (bloqueA -> empty .)


state 49

    (49) estatuto -> estatutoNP1 . estatutoA
    (50) estatutoA -> . asignacion
    (51) estatutoA -> . llamada
    (52) estatutoA -> . read
    (53) estatutoA -> . escritura
    (54) estatutoA -> . condicion
    (55) estatutoA -> . ciclo
    (57) asignacion -> . variable ASSIGNOP asignacionNP1 exp asignacionNP2
    (60) llamada -> . ID llamadaNP1 LEFTPAR loeNP2 primerparam llamadaA RIGHTPAR llamadaNP3
    (67) read -> . READ ID readNP1
    (69) escritura -> . WRITE escrituraNP1 LEFTPAR loeNP2 escrituraA escrituraB RIGHTPAR escrituraNP3
    (79) condicion -> . IF LEFTPAR exp condicionNP1 RIGHTPAR bloque condicionA
    (85) ciclo -> . FROM exp TO exp DO bloque
    (86) variable -> . ID variableNP1 variableA

    ID              shift and go to state 63
    READ            shift and go to state 64
    WRITE           shift and go to state 65
    IF              shift and go to state 66
    FROM            shift and go to state 67

    estatutoA                      shift and go to state 55
    asignacion                     shift and go to state 56
    llamada                        shift and go to state 57
    read                           shift and go to state 58
    escritura                      shift and go to state 59
    condicion                      shift and go to state 60
    ciclo                          shift and go to state 61
    variable                       shift and go to state 62

state 50

    (27) funcion -> FUNC funcionA funcionNP1 ID funcionNP2 . LEFTPAR funcionB RIGHTPAR SEMICOLON funcionC bloque

    LEFTPAR         shift and go to state 68


state 51

    (12) varsB -> FILE varsNP2 ID varsNP3 . varsNP6 varsE
    (15) varsNP6 -> .

    COMMA           reduce using rule 15 (varsNP6 -> .)
    SEMICOLON       reduce using rule 15 (varsNP6 -> .)

    varsNP6                        shift and go to state 69

state 52

    (13) varsB -> tipoSimple varsNP2 ID varsNP3 . varsC varsNP6
    (16) varsC -> . LEFTBRACKET CTI varsNP4 RIGHTBRACKET varsD
    (17) varsC -> . empty
    (130) empty -> .

    LEFTBRACKET     shift and go to state 71
    SEMICOLON       reduce using rule 130 (empty -> .)

    varsC                          shift and go to state 70
    empty                          shift and go to state 72

state 53

    (46) bloque -> LEFTCURLY bloqueA RIGHTCURLY .

    $end            reduce using rule 46 (bloque -> LEFTCURLY bloqueA RIGHTCURLY .)
    ELSE            reduce using rule 46 (bloque -> LEFTCURLY bloqueA RIGHTCURLY .)
    ID              reduce using rule 46 (bloque -> LEFTCURLY bloqueA RIGHTCURLY .)
    READ            reduce using rule 46 (bloque -> LEFTCURLY bloqueA RIGHTCURLY .)
    WRITE           reduce using rule 46 (bloque -> LEFTCURLY bloqueA RIGHTCURLY .)
    IF              reduce using rule 46 (bloque -> LEFTCURLY bloqueA RIGHTCURLY .)
    FROM            reduce using rule 46 (bloque -> LEFTCURLY bloqueA RIGHTCURLY .)
    RIGHTCURLY      reduce using rule 46 (bloque -> LEFTCURLY bloqueA RIGHTCURLY .)
    FUNC            reduce using rule 46 (bloque -> LEFTCURLY bloqueA RIGHTCURLY .)
    MAINSTART       reduce using rule 46 (bloque -> LEFTCURLY bloqueA RIGHTCURLY .)


state 54

    (47) bloqueA -> estatuto bloqueA .

    RIGHTCURLY      reduce using rule 47 (bloqueA -> estatuto bloqueA .)


state 55

    (49) estatuto -> estatutoNP1 estatutoA .

    ID              reduce using rule 49 (estatuto -> estatutoNP1 estatutoA .)
    READ            reduce using rule 49 (estatuto -> estatutoNP1 estatutoA .)
    WRITE           reduce using rule 49 (estatuto -> estatutoNP1 estatutoA .)
    IF              reduce using rule 49 (estatuto -> estatutoNP1 estatutoA .)
    FROM            reduce using rule 49 (estatuto -> estatutoNP1 estatutoA .)
    RIGHTCURLY      reduce using rule 49 (estatuto -> estatutoNP1 estatutoA .)


state 56

    (50) estatutoA -> asignacion .

    ID              reduce using rule 50 (estatutoA -> asignacion .)
    READ            reduce using rule 50 (estatutoA -> asignacion .)
    WRITE           reduce using rule 50 (estatutoA -> asignacion .)
    IF              reduce using rule 50 (estatutoA -> asignacion .)
    FROM            reduce using rule 50 (estatutoA -> asignacion .)
    RIGHTCURLY      reduce using rule 50 (estatutoA -> asignacion .)


state 57

    (51) estatutoA -> llamada .

    ID              reduce using rule 51 (estatutoA -> llamada .)
    READ            reduce using rule 51 (estatutoA -> llamada .)
    WRITE           reduce using rule 51 (estatutoA -> llamada .)
    IF              reduce using rule 51 (estatutoA -> llamada .)
    FROM            reduce using rule 51 (estatutoA -> llamada .)
    RIGHTCURLY      reduce using rule 51 (estatutoA -> llamada .)


state 58

    (52) estatutoA -> read .

    ID              reduce using rule 52 (estatutoA -> read .)
    READ            reduce using rule 52 (estatutoA -> read .)
    WRITE           reduce using rule 52 (estatutoA -> read .)
    IF              reduce using rule 52 (estatutoA -> read .)
    FROM            reduce using rule 52 (estatutoA -> read .)
    RIGHTCURLY      reduce using rule 52 (estatutoA -> read .)


state 59

    (53) estatutoA -> escritura .

    ID              reduce using rule 53 (estatutoA -> escritura .)
    READ            reduce using rule 53 (estatutoA -> escritura .)
    WRITE           reduce using rule 53 (estatutoA -> escritura .)
    IF              reduce using rule 53 (estatutoA -> escritura .)
    FROM            reduce using rule 53 (estatutoA -> escritura .)
    RIGHTCURLY      reduce using rule 53 (estatutoA -> escritura .)


state 60

    (54) estatutoA -> condicion .

    ID              reduce using rule 54 (estatutoA -> condicion .)
    READ            reduce using rule 54 (estatutoA -> condicion .)
    WRITE           reduce using rule 54 (estatutoA -> condicion .)
    IF              reduce using rule 54 (estatutoA -> condicion .)
    FROM            reduce using rule 54 (estatutoA -> condicion .)
    RIGHTCURLY      reduce using rule 54 (estatutoA -> condicion .)


state 61

    (55) estatutoA -> ciclo .

    ID              reduce using rule 55 (estatutoA -> ciclo .)
    READ            reduce using rule 55 (estatutoA -> ciclo .)
    WRITE           reduce using rule 55 (estatutoA -> ciclo .)
    IF              reduce using rule 55 (estatutoA -> ciclo .)
    FROM            reduce using rule 55 (estatutoA -> ciclo .)
    RIGHTCURLY      reduce using rule 55 (estatutoA -> ciclo .)


state 62

    (57) asignacion -> variable . ASSIGNOP asignacionNP1 exp asignacionNP2

    ASSIGNOP        shift and go to state 73


state 63

    (60) llamada -> ID . llamadaNP1 LEFTPAR loeNP2 primerparam llamadaA RIGHTPAR llamadaNP3
    (86) variable -> ID . variableNP1 variableA
    (65) llamadaNP1 -> .
    (87) variableNP1 -> .

    LEFTPAR         reduce using rule 65 (llamadaNP1 -> .)
    LEFTBRACKET     reduce using rule 87 (variableNP1 -> .)
    ASSIGNOP        reduce using rule 87 (variableNP1 -> .)
    MULOP           reduce using rule 87 (variableNP1 -> .)
    DIVOP           reduce using rule 87 (variableNP1 -> .)
    SUMOP           reduce using rule 87 (variableNP1 -> .)
    SUBOP           reduce using rule 87 (variableNP1 -> .)
    LESSTHANOP      reduce using rule 87 (variableNP1 -> .)
    GREATERTHANOP   reduce using rule 87 (variableNP1 -> .)
    DIFFERENTOP     reduce using rule 87 (variableNP1 -> .)
    EQUALOP         reduce using rule 87 (variableNP1 -> .)
    ANDOP           reduce using rule 87 (variableNP1 -> .)
    OROP            reduce using rule 87 (variableNP1 -> .)
    TO              reduce using rule 87 (variableNP1 -> .)
    RIGHTPAR        reduce using rule 87 (variableNP1 -> .)
    ID              reduce using rule 87 (variableNP1 -> .)
    READ            reduce using rule 87 (variableNP1 -> .)
    WRITE           reduce using rule 87 (variableNP1 -> .)
    IF              reduce using rule 87 (variableNP1 -> .)
    FROM            reduce using rule 87 (variableNP1 -> .)
    RIGHTCURLY      reduce using rule 87 (variableNP1 -> .)
    RIGHTBRACKET    reduce using rule 87 (variableNP1 -> .)
    DO              reduce using rule 87 (variableNP1 -> .)
    COMMA           reduce using rule 87 (variableNP1 -> .)

    llamadaNP1                     shift and go to state 74
    variableNP1                    shift and go to state 75

state 64

    (67) read -> READ . ID readNP1

    ID              shift and go to state 76


state 65

    (69) escritura -> WRITE . escrituraNP1 LEFTPAR loeNP2 escrituraA escrituraB RIGHTPAR escrituraNP3
    (70) escrituraNP1 -> .

    LEFTPAR         reduce using rule 70 (escrituraNP1 -> .)

    escrituraNP1                   shift and go to state 77

state 66

    (79) condicion -> IF . LEFTPAR exp condicionNP1 RIGHTPAR bloque condicionA

    LEFTPAR         shift and go to state 78


state 67

    (85) ciclo -> FROM . exp TO exp DO bloque
    (92) exp -> . exp1 expA
    (96) exp1 -> . exp2 exp1A
    (100) exp2 -> . exp3 exp2A
    (108) exp3 -> . termino exp3A
    (114) termino -> . terminoC terminoA
    (120) terminoC -> . factor
    (121) terminoC -> . llamada
    (122) factor -> . LEFTPAR operNP1 exp RIGHTPAR factorNP1
    (123) factor -> . CTI factorNP2
    (124) factor -> . CTF factorNP3
    (125) factor -> . variable
    (60) llamada -> . ID llamadaNP1 LEFTPAR loeNP2 primerparam llamadaA RIGHTPAR llamadaNP3
    (86) variable -> . ID variableNP1 variableA

    LEFTPAR         shift and go to state 87
    CTI             shift and go to state 88
    CTF             shift and go to state 89
    ID              shift and go to state 63

    exp                            shift and go to state 79
    exp1                           shift and go to state 80
    exp2                           shift and go to state 81
    exp3                           shift and go to state 82
    termino                        shift and go to state 83
    terminoC                       shift and go to state 84
    factor                         shift and go to state 85
    llamada                        shift and go to state 86
    variable                       shift and go to state 90

state 68

    (27) funcion -> FUNC funcionA funcionNP1 ID funcionNP2 LEFTPAR . funcionB RIGHTPAR SEMICOLON funcionC bloque
    (33) funcionB -> . params
    (34) funcionB -> . empty
    (42) params -> . tipoSimple paramsNP1 ID paramsA
    (130) empty -> .
    (39) tipoSimple -> . INT tipoSimpleNP1
    (40) tipoSimple -> . FLOAT tipoSimpleNP1

    RIGHTPAR        reduce using rule 130 (empty -> .)
    INT             shift and go to state 22
    FLOAT           shift and go to state 23

    funcionB                       shift and go to state 91
    params                         shift and go to state 92
    empty                          shift and go to state 93
    tipoSimple                     shift and go to state 94

state 69

    (12) varsB -> FILE varsNP2 ID varsNP3 varsNP6 . varsE
    (22) varsE -> . COMMA ID varsNP3 varsNP6 varsE
    (23) varsE -> . empty
    (130) empty -> .

    COMMA           shift and go to state 96
    SEMICOLON       reduce using rule 130 (empty -> .)

    varsE                          shift and go to state 95
    empty                          shift and go to state 97

state 70

    (13) varsB -> tipoSimple varsNP2 ID varsNP3 varsC . varsNP6
    (15) varsNP6 -> .

    SEMICOLON       reduce using rule 15 (varsNP6 -> .)

    varsNP6                        shift and go to state 98

state 71

    (16) varsC -> LEFTBRACKET . CTI varsNP4 RIGHTBRACKET varsD

    CTI             shift and go to state 99


state 72

    (17) varsC -> empty .

    SEMICOLON       reduce using rule 17 (varsC -> empty .)


state 73

    (57) asignacion -> variable ASSIGNOP . asignacionNP1 exp asignacionNP2
    (58) asignacionNP1 -> .

    LEFTPAR         reduce using rule 58 (asignacionNP1 -> .)
    CTI             reduce using rule 58 (asignacionNP1 -> .)
    CTF             reduce using rule 58 (asignacionNP1 -> .)
    ID              reduce using rule 58 (asignacionNP1 -> .)

    asignacionNP1                  shift and go to state 100

state 74

    (60) llamada -> ID llamadaNP1 . LEFTPAR loeNP2 primerparam llamadaA RIGHTPAR llamadaNP3

    LEFTPAR         shift and go to state 101


state 75

    (86) variable -> ID variableNP1 . variableA
    (88) variableA -> . LEFTBRACKET exp RIGHTBRACKET variableB
    (89) variableA -> . empty
    (130) empty -> .

    LEFTBRACKET     shift and go to state 103
    ASSIGNOP        reduce using rule 130 (empty -> .)
    MULOP           reduce using rule 130 (empty -> .)
    DIVOP           reduce using rule 130 (empty -> .)
    SUMOP           reduce using rule 130 (empty -> .)
    SUBOP           reduce using rule 130 (empty -> .)
    LESSTHANOP      reduce using rule 130 (empty -> .)
    GREATERTHANOP   reduce using rule 130 (empty -> .)
    DIFFERENTOP     reduce using rule 130 (empty -> .)
    EQUALOP         reduce using rule 130 (empty -> .)
    ANDOP           reduce using rule 130 (empty -> .)
    OROP            reduce using rule 130 (empty -> .)
    TO              reduce using rule 130 (empty -> .)
    RIGHTPAR        reduce using rule 130 (empty -> .)
    ID              reduce using rule 130 (empty -> .)
    READ            reduce using rule 130 (empty -> .)
    WRITE           reduce using rule 130 (empty -> .)
    IF              reduce using rule 130 (empty -> .)
    FROM            reduce using rule 130 (empty -> .)
    RIGHTCURLY      reduce using rule 130 (empty -> .)
    RIGHTBRACKET    reduce using rule 130 (empty -> .)
    DO              reduce using rule 130 (empty -> .)
    COMMA           reduce using rule 130 (empty -> .)

    variableA                      shift and go to state 102
    empty                          shift and go to state 104

state 76

    (67) read -> READ ID . readNP1
    (68) readNP1 -> .

    ID              reduce using rule 68 (readNP1 -> .)
    READ            reduce using rule 68 (readNP1 -> .)
    WRITE           reduce using rule 68 (readNP1 -> .)
    IF              reduce using rule 68 (readNP1 -> .)
    FROM            reduce using rule 68 (readNP1 -> .)
    RIGHTCURLY      reduce using rule 68 (readNP1 -> .)

    readNP1                        shift and go to state 105

state 77

    (69) escritura -> WRITE escrituraNP1 . LEFTPAR loeNP2 escrituraA escrituraB RIGHTPAR escrituraNP3

    LEFTPAR         shift and go to state 106


state 78

    (79) condicion -> IF LEFTPAR . exp condicionNP1 RIGHTPAR bloque condicionA
    (92) exp -> . exp1 expA
    (96) exp1 -> . exp2 exp1A
    (100) exp2 -> . exp3 exp2A
    (108) exp3 -> . termino exp3A
    (114) termino -> . terminoC terminoA
    (120) terminoC -> . factor
    (121) terminoC -> . llamada
    (122) factor -> . LEFTPAR operNP1 exp RIGHTPAR factorNP1
    (123) factor -> . CTI factorNP2
    (124) factor -> . CTF factorNP3
    (125) factor -> . variable
    (60) llamada -> . ID llamadaNP1 LEFTPAR loeNP2 primerparam llamadaA RIGHTPAR llamadaNP3
    (86) variable -> . ID variableNP1 variableA

    LEFTPAR         shift and go to state 87
    CTI             shift and go to state 88
    CTF             shift and go to state 89
    ID              shift and go to state 63

    exp                            shift and go to state 107
    exp1                           shift and go to state 80
    exp2                           shift and go to state 81
    exp3                           shift and go to state 82
    termino                        shift and go to state 83
    terminoC                       shift and go to state 84
    factor                         shift and go to state 85
    llamada                        shift and go to state 86
    variable                       shift and go to state 90

state 79

    (85) ciclo -> FROM exp . TO exp DO bloque

    TO              shift and go to state 108


state 80

    (92) exp -> exp1 . expA
    (94) expA -> . OROP operNP1 exp1 expNP1 expA
    (95) expA -> . empty
    (130) empty -> .

    OROP            shift and go to state 110
    TO              reduce using rule 130 (empty -> .)
    RIGHTPAR        reduce using rule 130 (empty -> .)
    ID              reduce using rule 130 (empty -> .)
    READ            reduce using rule 130 (empty -> .)
    WRITE           reduce using rule 130 (empty -> .)
    IF              reduce using rule 130 (empty -> .)
    FROM            reduce using rule 130 (empty -> .)
    RIGHTCURLY      reduce using rule 130 (empty -> .)
    RIGHTBRACKET    reduce using rule 130 (empty -> .)
    DO              reduce using rule 130 (empty -> .)
    COMMA           reduce using rule 130 (empty -> .)

    expA                           shift and go to state 109
    empty                          shift and go to state 111

state 81

    (96) exp1 -> exp2 . exp1A
    (98) exp1A -> . ANDOP operNP1 exp2 exp1NP1 exp1A
    (99) exp1A -> . empty
    (130) empty -> .

    ANDOP           shift and go to state 113
    OROP            reduce using rule 130 (empty -> .)
    TO              reduce using rule 130 (empty -> .)
    RIGHTPAR        reduce using rule 130 (empty -> .)
    ID              reduce using rule 130 (empty -> .)
    READ            reduce using rule 130 (empty -> .)
    WRITE           reduce using rule 130 (empty -> .)
    IF              reduce using rule 130 (empty -> .)
    FROM            reduce using rule 130 (empty -> .)
    RIGHTCURLY      reduce using rule 130 (empty -> .)
    RIGHTBRACKET    reduce using rule 130 (empty -> .)
    DO              reduce using rule 130 (empty -> .)
    COMMA           reduce using rule 130 (empty -> .)

    exp1A                          shift and go to state 112
    empty                          shift and go to state 114

state 82

    (100) exp2 -> exp3 . exp2A
    (101) exp2A -> . exp2B operNP1 exp3 exp2ANP1
    (102) exp2A -> . empty
    (104) exp2B -> . LESSTHANOP
    (105) exp2B -> . GREATERTHANOP
    (106) exp2B -> . DIFFERENTOP
    (107) exp2B -> . EQUALOP
    (130) empty -> .

    LESSTHANOP      shift and go to state 118
    GREATERTHANOP   shift and go to state 119
    DIFFERENTOP     shift and go to state 120
    EQUALOP         shift and go to state 121
    ANDOP           reduce using rule 130 (empty -> .)
    OROP            reduce using rule 130 (empty -> .)
    TO              reduce using rule 130 (empty -> .)
    RIGHTPAR        reduce using rule 130 (empty -> .)
    ID              reduce using rule 130 (empty -> .)
    READ            reduce using rule 130 (empty -> .)
    WRITE           reduce using rule 130 (empty -> .)
    IF              reduce using rule 130 (empty -> .)
    FROM            reduce using rule 130 (empty -> .)
    RIGHTCURLY      reduce using rule 130 (empty -> .)
    RIGHTBRACKET    reduce using rule 130 (empty -> .)
    DO              reduce using rule 130 (empty -> .)
    COMMA           reduce using rule 130 (empty -> .)

    exp2A                          shift and go to state 115
    exp2B                          shift and go to state 116
    empty                          shift and go to state 117

state 83

    (108) exp3 -> termino . exp3A
    (110) exp3A -> . exp3B operNP1 termino exp3NP1 exp3A
    (111) exp3A -> . empty
    (112) exp3B -> . SUMOP
    (113) exp3B -> . SUBOP
    (130) empty -> .

    SUMOP           shift and go to state 125
    SUBOP           shift and go to state 126
    LESSTHANOP      reduce using rule 130 (empty -> .)
    GREATERTHANOP   reduce using rule 130 (empty -> .)
    DIFFERENTOP     reduce using rule 130 (empty -> .)
    EQUALOP         reduce using rule 130 (empty -> .)
    ANDOP           reduce using rule 130 (empty -> .)
    OROP            reduce using rule 130 (empty -> .)
    TO              reduce using rule 130 (empty -> .)
    RIGHTPAR        reduce using rule 130 (empty -> .)
    ID              reduce using rule 130 (empty -> .)
    READ            reduce using rule 130 (empty -> .)
    WRITE           reduce using rule 130 (empty -> .)
    IF              reduce using rule 130 (empty -> .)
    FROM            reduce using rule 130 (empty -> .)
    RIGHTCURLY      reduce using rule 130 (empty -> .)
    RIGHTBRACKET    reduce using rule 130 (empty -> .)
    DO              reduce using rule 130 (empty -> .)
    COMMA           reduce using rule 130 (empty -> .)

    exp3A                          shift and go to state 122
    exp3B                          shift and go to state 123
    empty                          shift and go to state 124

state 84

    (114) termino -> terminoC . terminoA
    (115) terminoA -> . terminoB operNP1 terminoC terminoANP1 terminoA
    (116) terminoA -> . empty
    (118) terminoB -> . MULOP
    (119) terminoB -> . DIVOP
    (130) empty -> .

    MULOP           shift and go to state 130
    DIVOP           shift and go to state 131
    SUMOP           reduce using rule 130 (empty -> .)
    SUBOP           reduce using rule 130 (empty -> .)
    LESSTHANOP      reduce using rule 130 (empty -> .)
    GREATERTHANOP   reduce using rule 130 (empty -> .)
    DIFFERENTOP     reduce using rule 130 (empty -> .)
    EQUALOP         reduce using rule 130 (empty -> .)
    ANDOP           reduce using rule 130 (empty -> .)
    OROP            reduce using rule 130 (empty -> .)
    TO              reduce using rule 130 (empty -> .)
    RIGHTPAR        reduce using rule 130 (empty -> .)
    ID              reduce using rule 130 (empty -> .)
    READ            reduce using rule 130 (empty -> .)
    WRITE           reduce using rule 130 (empty -> .)
    IF              reduce using rule 130 (empty -> .)
    FROM            reduce using rule 130 (empty -> .)
    RIGHTCURLY      reduce using rule 130 (empty -> .)
    RIGHTBRACKET    reduce using rule 130 (empty -> .)
    DO              reduce using rule 130 (empty -> .)
    COMMA           reduce using rule 130 (empty -> .)

    terminoA                       shift and go to state 127
    terminoB                       shift and go to state 128
    empty                          shift and go to state 129

state 85

    (120) terminoC -> factor .

    MULOP           reduce using rule 120 (terminoC -> factor .)
    DIVOP           reduce using rule 120 (terminoC -> factor .)
    SUMOP           reduce using rule 120 (terminoC -> factor .)
    SUBOP           reduce using rule 120 (terminoC -> factor .)
    LESSTHANOP      reduce using rule 120 (terminoC -> factor .)
    GREATERTHANOP   reduce using rule 120 (terminoC -> factor .)
    DIFFERENTOP     reduce using rule 120 (terminoC -> factor .)
    EQUALOP         reduce using rule 120 (terminoC -> factor .)
    ANDOP           reduce using rule 120 (terminoC -> factor .)
    OROP            reduce using rule 120 (terminoC -> factor .)
    TO              reduce using rule 120 (terminoC -> factor .)
    RIGHTPAR        reduce using rule 120 (terminoC -> factor .)
    ID              reduce using rule 120 (terminoC -> factor .)
    READ            reduce using rule 120 (terminoC -> factor .)
    WRITE           reduce using rule 120 (terminoC -> factor .)
    IF              reduce using rule 120 (terminoC -> factor .)
    FROM            reduce using rule 120 (terminoC -> factor .)
    RIGHTCURLY      reduce using rule 120 (terminoC -> factor .)
    RIGHTBRACKET    reduce using rule 120 (terminoC -> factor .)
    DO              reduce using rule 120 (terminoC -> factor .)
    COMMA           reduce using rule 120 (terminoC -> factor .)


state 86

    (121) terminoC -> llamada .

    MULOP           reduce using rule 121 (terminoC -> llamada .)
    DIVOP           reduce using rule 121 (terminoC -> llamada .)
    SUMOP           reduce using rule 121 (terminoC -> llamada .)
    SUBOP           reduce using rule 121 (terminoC -> llamada .)
    LESSTHANOP      reduce using rule 121 (terminoC -> llamada .)
    GREATERTHANOP   reduce using rule 121 (terminoC -> llamada .)
    DIFFERENTOP     reduce using rule 121 (terminoC -> llamada .)
    EQUALOP         reduce using rule 121 (terminoC -> llamada .)
    ANDOP           reduce using rule 121 (terminoC -> llamada .)
    OROP            reduce using rule 121 (terminoC -> llamada .)
    TO              reduce using rule 121 (terminoC -> llamada .)
    RIGHTPAR        reduce using rule 121 (terminoC -> llamada .)
    ID              reduce using rule 121 (terminoC -> llamada .)
    READ            reduce using rule 121 (terminoC -> llamada .)
    WRITE           reduce using rule 121 (terminoC -> llamada .)
    IF              reduce using rule 121 (terminoC -> llamada .)
    FROM            reduce using rule 121 (terminoC -> llamada .)
    RIGHTCURLY      reduce using rule 121 (terminoC -> llamada .)
    RIGHTBRACKET    reduce using rule 121 (terminoC -> llamada .)
    DO              reduce using rule 121 (terminoC -> llamada .)
    COMMA           reduce using rule 121 (terminoC -> llamada .)


state 87

    (122) factor -> LEFTPAR . operNP1 exp RIGHTPAR factorNP1
    (126) operNP1 -> .

    LEFTPAR         reduce using rule 126 (operNP1 -> .)
    CTI             reduce using rule 126 (operNP1 -> .)
    CTF             reduce using rule 126 (operNP1 -> .)
    ID              reduce using rule 126 (operNP1 -> .)

    operNP1                        shift and go to state 132

state 88

    (123) factor -> CTI . factorNP2
    (128) factorNP2 -> .

    MULOP           reduce using rule 128 (factorNP2 -> .)
    DIVOP           reduce using rule 128 (factorNP2 -> .)
    SUMOP           reduce using rule 128 (factorNP2 -> .)
    SUBOP           reduce using rule 128 (factorNP2 -> .)
    LESSTHANOP      reduce using rule 128 (factorNP2 -> .)
    GREATERTHANOP   reduce using rule 128 (factorNP2 -> .)
    DIFFERENTOP     reduce using rule 128 (factorNP2 -> .)
    EQUALOP         reduce using rule 128 (factorNP2 -> .)
    ANDOP           reduce using rule 128 (factorNP2 -> .)
    OROP            reduce using rule 128 (factorNP2 -> .)
    TO              reduce using rule 128 (factorNP2 -> .)
    RIGHTPAR        reduce using rule 128 (factorNP2 -> .)
    ID              reduce using rule 128 (factorNP2 -> .)
    READ            reduce using rule 128 (factorNP2 -> .)
    WRITE           reduce using rule 128 (factorNP2 -> .)
    IF              reduce using rule 128 (factorNP2 -> .)
    FROM            reduce using rule 128 (factorNP2 -> .)
    RIGHTCURLY      reduce using rule 128 (factorNP2 -> .)
    RIGHTBRACKET    reduce using rule 128 (factorNP2 -> .)
    DO              reduce using rule 128 (factorNP2 -> .)
    COMMA           reduce using rule 128 (factorNP2 -> .)

    factorNP2                      shift and go to state 133

state 89

    (124) factor -> CTF . factorNP3
    (129) factorNP3 -> .

    MULOP           reduce using rule 129 (factorNP3 -> .)
    DIVOP           reduce using rule 129 (factorNP3 -> .)
    SUMOP           reduce using rule 129 (factorNP3 -> .)
    SUBOP           reduce using rule 129 (factorNP3 -> .)
    LESSTHANOP      reduce using rule 129 (factorNP3 -> .)
    GREATERTHANOP   reduce using rule 129 (factorNP3 -> .)
    DIFFERENTOP     reduce using rule 129 (factorNP3 -> .)
    EQUALOP         reduce using rule 129 (factorNP3 -> .)
    ANDOP           reduce using rule 129 (factorNP3 -> .)
    OROP            reduce using rule 129 (factorNP3 -> .)
    TO              reduce using rule 129 (factorNP3 -> .)
    RIGHTPAR        reduce using rule 129 (factorNP3 -> .)
    ID              reduce using rule 129 (factorNP3 -> .)
    READ            reduce using rule 129 (factorNP3 -> .)
    WRITE           reduce using rule 129 (factorNP3 -> .)
    IF              reduce using rule 129 (factorNP3 -> .)
    FROM            reduce using rule 129 (factorNP3 -> .)
    RIGHTCURLY      reduce using rule 129 (factorNP3 -> .)
    RIGHTBRACKET    reduce using rule 129 (factorNP3 -> .)
    DO              reduce using rule 129 (factorNP3 -> .)
    COMMA           reduce using rule 129 (factorNP3 -> .)

    factorNP3                      shift and go to state 134

state 90

    (125) factor -> variable .

    MULOP           reduce using rule 125 (factor -> variable .)
    DIVOP           reduce using rule 125 (factor -> variable .)
    SUMOP           reduce using rule 125 (factor -> variable .)
    SUBOP           reduce using rule 125 (factor -> variable .)
    LESSTHANOP      reduce using rule 125 (factor -> variable .)
    GREATERTHANOP   reduce using rule 125 (factor -> variable .)
    DIFFERENTOP     reduce using rule 125 (factor -> variable .)
    EQUALOP         reduce using rule 125 (factor -> variable .)
    ANDOP           reduce using rule 125 (factor -> variable .)
    OROP            reduce using rule 125 (factor -> variable .)
    TO              reduce using rule 125 (factor -> variable .)
    RIGHTPAR        reduce using rule 125 (factor -> variable .)
    ID              reduce using rule 125 (factor -> variable .)
    READ            reduce using rule 125 (factor -> variable .)
    WRITE           reduce using rule 125 (factor -> variable .)
    IF              reduce using rule 125 (factor -> variable .)
    FROM            reduce using rule 125 (factor -> variable .)
    RIGHTCURLY      reduce using rule 125 (factor -> variable .)
    RIGHTBRACKET    reduce using rule 125 (factor -> variable .)
    DO              reduce using rule 125 (factor -> variable .)
    COMMA           reduce using rule 125 (factor -> variable .)


state 91

    (27) funcion -> FUNC funcionA funcionNP1 ID funcionNP2 LEFTPAR funcionB . RIGHTPAR SEMICOLON funcionC bloque

    RIGHTPAR        shift and go to state 135


state 92

    (33) funcionB -> params .

    RIGHTPAR        reduce using rule 33 (funcionB -> params .)


state 93

    (34) funcionB -> empty .

    RIGHTPAR        reduce using rule 34 (funcionB -> empty .)


state 94

    (42) params -> tipoSimple . paramsNP1 ID paramsA
    (45) paramsNP1 -> .

    ID              reduce using rule 45 (paramsNP1 -> .)

    paramsNP1                      shift and go to state 136

state 95

    (12) varsB -> FILE varsNP2 ID varsNP3 varsNP6 varsE .

    SEMICOLON       reduce using rule 12 (varsB -> FILE varsNP2 ID varsNP3 varsNP6 varsE .)


state 96

    (22) varsE -> COMMA . ID varsNP3 varsNP6 varsE

    ID              shift and go to state 137


state 97

    (23) varsE -> empty .

    SEMICOLON       reduce using rule 23 (varsE -> empty .)


state 98

    (13) varsB -> tipoSimple varsNP2 ID varsNP3 varsC varsNP6 .

    SEMICOLON       reduce using rule 13 (varsB -> tipoSimple varsNP2 ID varsNP3 varsC varsNP6 .)


state 99

    (16) varsC -> LEFTBRACKET CTI . varsNP4 RIGHTBRACKET varsD
    (18) varsNP4 -> .

    RIGHTBRACKET    reduce using rule 18 (varsNP4 -> .)

    varsNP4                        shift and go to state 138

state 100

    (57) asignacion -> variable ASSIGNOP asignacionNP1 . exp asignacionNP2
    (92) exp -> . exp1 expA
    (96) exp1 -> . exp2 exp1A
    (100) exp2 -> . exp3 exp2A
    (108) exp3 -> . termino exp3A
    (114) termino -> . terminoC terminoA
    (120) terminoC -> . factor
    (121) terminoC -> . llamada
    (122) factor -> . LEFTPAR operNP1 exp RIGHTPAR factorNP1
    (123) factor -> . CTI factorNP2
    (124) factor -> . CTF factorNP3
    (125) factor -> . variable
    (60) llamada -> . ID llamadaNP1 LEFTPAR loeNP2 primerparam llamadaA RIGHTPAR llamadaNP3
    (86) variable -> . ID variableNP1 variableA

    LEFTPAR         shift and go to state 87
    CTI             shift and go to state 88
    CTF             shift and go to state 89
    ID              shift and go to state 63

    variable                       shift and go to state 90
    exp                            shift and go to state 139
    exp1                           shift and go to state 80
    exp2                           shift and go to state 81
    exp3                           shift and go to state 82
    termino                        shift and go to state 83
    terminoC                       shift and go to state 84
    factor                         shift and go to state 85
    llamada                        shift and go to state 86

state 101

    (60) llamada -> ID llamadaNP1 LEFTPAR . loeNP2 primerparam llamadaA RIGHTPAR llamadaNP3
    (72) loeNP2 -> .

    LEFTPAR         reduce using rule 72 (loeNP2 -> .)
    CTI             reduce using rule 72 (loeNP2 -> .)
    CTF             reduce using rule 72 (loeNP2 -> .)
    ID              reduce using rule 72 (loeNP2 -> .)
    COMMA           reduce using rule 72 (loeNP2 -> .)
    RIGHTPAR        reduce using rule 72 (loeNP2 -> .)

    loeNP2                         shift and go to state 140

state 102

    (86) variable -> ID variableNP1 variableA .

    ASSIGNOP        reduce using rule 86 (variable -> ID variableNP1 variableA .)
    MULOP           reduce using rule 86 (variable -> ID variableNP1 variableA .)
    DIVOP           reduce using rule 86 (variable -> ID variableNP1 variableA .)
    SUMOP           reduce using rule 86 (variable -> ID variableNP1 variableA .)
    SUBOP           reduce using rule 86 (variable -> ID variableNP1 variableA .)
    LESSTHANOP      reduce using rule 86 (variable -> ID variableNP1 variableA .)
    GREATERTHANOP   reduce using rule 86 (variable -> ID variableNP1 variableA .)
    DIFFERENTOP     reduce using rule 86 (variable -> ID variableNP1 variableA .)
    EQUALOP         reduce using rule 86 (variable -> ID variableNP1 variableA .)
    ANDOP           reduce using rule 86 (variable -> ID variableNP1 variableA .)
    OROP            reduce using rule 86 (variable -> ID variableNP1 variableA .)
    TO              reduce using rule 86 (variable -> ID variableNP1 variableA .)
    RIGHTPAR        reduce using rule 86 (variable -> ID variableNP1 variableA .)
    ID              reduce using rule 86 (variable -> ID variableNP1 variableA .)
    READ            reduce using rule 86 (variable -> ID variableNP1 variableA .)
    WRITE           reduce using rule 86 (variable -> ID variableNP1 variableA .)
    IF              reduce using rule 86 (variable -> ID variableNP1 variableA .)
    FROM            reduce using rule 86 (variable -> ID variableNP1 variableA .)
    RIGHTCURLY      reduce using rule 86 (variable -> ID variableNP1 variableA .)
    RIGHTBRACKET    reduce using rule 86 (variable -> ID variableNP1 variableA .)
    DO              reduce using rule 86 (variable -> ID variableNP1 variableA .)
    COMMA           reduce using rule 86 (variable -> ID variableNP1 variableA .)


state 103

    (88) variableA -> LEFTBRACKET . exp RIGHTBRACKET variableB
    (92) exp -> . exp1 expA
    (96) exp1 -> . exp2 exp1A
    (100) exp2 -> . exp3 exp2A
    (108) exp3 -> . termino exp3A
    (114) termino -> . terminoC terminoA
    (120) terminoC -> . factor
    (121) terminoC -> . llamada
    (122) factor -> . LEFTPAR operNP1 exp RIGHTPAR factorNP1
    (123) factor -> . CTI factorNP2
    (124) factor -> . CTF factorNP3
    (125) factor -> . variable
    (60) llamada -> . ID llamadaNP1 LEFTPAR loeNP2 primerparam llamadaA RIGHTPAR llamadaNP3
    (86) variable -> . ID variableNP1 variableA

    LEFTPAR         shift and go to state 87
    CTI             shift and go to state 88
    CTF             shift and go to state 89
    ID              shift and go to state 63

    exp                            shift and go to state 141
    exp1                           shift and go to state 80
    exp2                           shift and go to state 81
    exp3                           shift and go to state 82
    termino                        shift and go to state 83
    terminoC                       shift and go to state 84
    factor                         shift and go to state 85
    llamada                        shift and go to state 86
    variable                       shift and go to state 90

state 104

    (89) variableA -> empty .

    ASSIGNOP        reduce using rule 89 (variableA -> empty .)
    MULOP           reduce using rule 89 (variableA -> empty .)
    DIVOP           reduce using rule 89 (variableA -> empty .)
    SUMOP           reduce using rule 89 (variableA -> empty .)
    SUBOP           reduce using rule 89 (variableA -> empty .)
    LESSTHANOP      reduce using rule 89 (variableA -> empty .)
    GREATERTHANOP   reduce using rule 89 (variableA -> empty .)
    DIFFERENTOP     reduce using rule 89 (variableA -> empty .)
    EQUALOP         reduce using rule 89 (variableA -> empty .)
    ANDOP           reduce using rule 89 (variableA -> empty .)
    OROP            reduce using rule 89 (variableA -> empty .)
    TO              reduce using rule 89 (variableA -> empty .)
    RIGHTPAR        reduce using rule 89 (variableA -> empty .)
    ID              reduce using rule 89 (variableA -> empty .)
    READ            reduce using rule 89 (variableA -> empty .)
    WRITE           reduce using rule 89 (variableA -> empty .)
    IF              reduce using rule 89 (variableA -> empty .)
    FROM            reduce using rule 89 (variableA -> empty .)
    RIGHTCURLY      reduce using rule 89 (variableA -> empty .)
    RIGHTBRACKET    reduce using rule 89 (variableA -> empty .)
    DO              reduce using rule 89 (variableA -> empty .)
    COMMA           reduce using rule 89 (variableA -> empty .)


state 105

    (67) read -> READ ID readNP1 .

    ID              reduce using rule 67 (read -> READ ID readNP1 .)
    READ            reduce using rule 67 (read -> READ ID readNP1 .)
    WRITE           reduce using rule 67 (read -> READ ID readNP1 .)
    IF              reduce using rule 67 (read -> READ ID readNP1 .)
    FROM            reduce using rule 67 (read -> READ ID readNP1 .)
    RIGHTCURLY      reduce using rule 67 (read -> READ ID readNP1 .)


state 106

    (69) escritura -> WRITE escrituraNP1 LEFTPAR . loeNP2 escrituraA escrituraB RIGHTPAR escrituraNP3
    (72) loeNP2 -> .

    CTSTRING        reduce using rule 72 (loeNP2 -> .)
    LEFTPAR         reduce using rule 72 (loeNP2 -> .)
    CTI             reduce using rule 72 (loeNP2 -> .)
    CTF             reduce using rule 72 (loeNP2 -> .)
    ID              reduce using rule 72 (loeNP2 -> .)

    loeNP2                         shift and go to state 142

state 107

    (79) condicion -> IF LEFTPAR exp . condicionNP1 RIGHTPAR bloque condicionA
    (80) condicionNP1 -> .

    RIGHTPAR        reduce using rule 80 (condicionNP1 -> .)

    condicionNP1                   shift and go to state 143

state 108

    (85) ciclo -> FROM exp TO . exp DO bloque
    (92) exp -> . exp1 expA
    (96) exp1 -> . exp2 exp1A
    (100) exp2 -> . exp3 exp2A
    (108) exp3 -> . termino exp3A
    (114) termino -> . terminoC terminoA
    (120) terminoC -> . factor
    (121) terminoC -> . llamada
    (122) factor -> . LEFTPAR operNP1 exp RIGHTPAR factorNP1
    (123) factor -> . CTI factorNP2
    (124) factor -> . CTF factorNP3
    (125) factor -> . variable
    (60) llamada -> . ID llamadaNP1 LEFTPAR loeNP2 primerparam llamadaA RIGHTPAR llamadaNP3
    (86) variable -> . ID variableNP1 variableA

    LEFTPAR         shift and go to state 87
    CTI             shift and go to state 88
    CTF             shift and go to state 89
    ID              shift and go to state 63

    exp                            shift and go to state 144
    exp1                           shift and go to state 80
    exp2                           shift and go to state 81
    exp3                           shift and go to state 82
    termino                        shift and go to state 83
    terminoC                       shift and go to state 84
    factor                         shift and go to state 85
    llamada                        shift and go to state 86
    variable                       shift and go to state 90

state 109

    (92) exp -> exp1 expA .

    TO              reduce using rule 92 (exp -> exp1 expA .)
    RIGHTPAR        reduce using rule 92 (exp -> exp1 expA .)
    ID              reduce using rule 92 (exp -> exp1 expA .)
    READ            reduce using rule 92 (exp -> exp1 expA .)
    WRITE           reduce using rule 92 (exp -> exp1 expA .)
    IF              reduce using rule 92 (exp -> exp1 expA .)
    FROM            reduce using rule 92 (exp -> exp1 expA .)
    RIGHTCURLY      reduce using rule 92 (exp -> exp1 expA .)
    RIGHTBRACKET    reduce using rule 92 (exp -> exp1 expA .)
    DO              reduce using rule 92 (exp -> exp1 expA .)
    COMMA           reduce using rule 92 (exp -> exp1 expA .)


state 110

    (94) expA -> OROP . operNP1 exp1 expNP1 expA
    (126) operNP1 -> .

    LEFTPAR         reduce using rule 126 (operNP1 -> .)
    CTI             reduce using rule 126 (operNP1 -> .)
    CTF             reduce using rule 126 (operNP1 -> .)
    ID              reduce using rule 126 (operNP1 -> .)

    operNP1                        shift and go to state 145

state 111

    (95) expA -> empty .

    TO              reduce using rule 95 (expA -> empty .)
    RIGHTPAR        reduce using rule 95 (expA -> empty .)
    ID              reduce using rule 95 (expA -> empty .)
    READ            reduce using rule 95 (expA -> empty .)
    WRITE           reduce using rule 95 (expA -> empty .)
    IF              reduce using rule 95 (expA -> empty .)
    FROM            reduce using rule 95 (expA -> empty .)
    RIGHTCURLY      reduce using rule 95 (expA -> empty .)
    RIGHTBRACKET    reduce using rule 95 (expA -> empty .)
    DO              reduce using rule 95 (expA -> empty .)
    COMMA           reduce using rule 95 (expA -> empty .)


state 112

    (96) exp1 -> exp2 exp1A .

    OROP            reduce using rule 96 (exp1 -> exp2 exp1A .)
    TO              reduce using rule 96 (exp1 -> exp2 exp1A .)
    RIGHTPAR        reduce using rule 96 (exp1 -> exp2 exp1A .)
    ID              reduce using rule 96 (exp1 -> exp2 exp1A .)
    READ            reduce using rule 96 (exp1 -> exp2 exp1A .)
    WRITE           reduce using rule 96 (exp1 -> exp2 exp1A .)
    IF              reduce using rule 96 (exp1 -> exp2 exp1A .)
    FROM            reduce using rule 96 (exp1 -> exp2 exp1A .)
    RIGHTCURLY      reduce using rule 96 (exp1 -> exp2 exp1A .)
    RIGHTBRACKET    reduce using rule 96 (exp1 -> exp2 exp1A .)
    DO              reduce using rule 96 (exp1 -> exp2 exp1A .)
    COMMA           reduce using rule 96 (exp1 -> exp2 exp1A .)


state 113

    (98) exp1A -> ANDOP . operNP1 exp2 exp1NP1 exp1A
    (126) operNP1 -> .

    LEFTPAR         reduce using rule 126 (operNP1 -> .)
    CTI             reduce using rule 126 (operNP1 -> .)
    CTF             reduce using rule 126 (operNP1 -> .)
    ID              reduce using rule 126 (operNP1 -> .)

    operNP1                        shift and go to state 146

state 114

    (99) exp1A -> empty .

    OROP            reduce using rule 99 (exp1A -> empty .)
    TO              reduce using rule 99 (exp1A -> empty .)
    RIGHTPAR        reduce using rule 99 (exp1A -> empty .)
    ID              reduce using rule 99 (exp1A -> empty .)
    READ            reduce using rule 99 (exp1A -> empty .)
    WRITE           reduce using rule 99 (exp1A -> empty .)
    IF              reduce using rule 99 (exp1A -> empty .)
    FROM            reduce using rule 99 (exp1A -> empty .)
    RIGHTCURLY      reduce using rule 99 (exp1A -> empty .)
    RIGHTBRACKET    reduce using rule 99 (exp1A -> empty .)
    DO              reduce using rule 99 (exp1A -> empty .)
    COMMA           reduce using rule 99 (exp1A -> empty .)


state 115

    (100) exp2 -> exp3 exp2A .

    ANDOP           reduce using rule 100 (exp2 -> exp3 exp2A .)
    OROP            reduce using rule 100 (exp2 -> exp3 exp2A .)
    TO              reduce using rule 100 (exp2 -> exp3 exp2A .)
    RIGHTPAR        reduce using rule 100 (exp2 -> exp3 exp2A .)
    ID              reduce using rule 100 (exp2 -> exp3 exp2A .)
    READ            reduce using rule 100 (exp2 -> exp3 exp2A .)
    WRITE           reduce using rule 100 (exp2 -> exp3 exp2A .)
    IF              reduce using rule 100 (exp2 -> exp3 exp2A .)
    FROM            reduce using rule 100 (exp2 -> exp3 exp2A .)
    RIGHTCURLY      reduce using rule 100 (exp2 -> exp3 exp2A .)
    RIGHTBRACKET    reduce using rule 100 (exp2 -> exp3 exp2A .)
    DO              reduce using rule 100 (exp2 -> exp3 exp2A .)
    COMMA           reduce using rule 100 (exp2 -> exp3 exp2A .)


state 116

    (101) exp2A -> exp2B . operNP1 exp3 exp2ANP1
    (126) operNP1 -> .

    LEFTPAR         reduce using rule 126 (operNP1 -> .)
    CTI             reduce using rule 126 (operNP1 -> .)
    CTF             reduce using rule 126 (operNP1 -> .)
    ID              reduce using rule 126 (operNP1 -> .)

    operNP1                        shift and go to state 147

state 117

    (102) exp2A -> empty .

    ANDOP           reduce using rule 102 (exp2A -> empty .)
    OROP            reduce using rule 102 (exp2A -> empty .)
    TO              reduce using rule 102 (exp2A -> empty .)
    RIGHTPAR        reduce using rule 102 (exp2A -> empty .)
    ID              reduce using rule 102 (exp2A -> empty .)
    READ            reduce using rule 102 (exp2A -> empty .)
    WRITE           reduce using rule 102 (exp2A -> empty .)
    IF              reduce using rule 102 (exp2A -> empty .)
    FROM            reduce using rule 102 (exp2A -> empty .)
    RIGHTCURLY      reduce using rule 102 (exp2A -> empty .)
    RIGHTBRACKET    reduce using rule 102 (exp2A -> empty .)
    DO              reduce using rule 102 (exp2A -> empty .)
    COMMA           reduce using rule 102 (exp2A -> empty .)


state 118

    (104) exp2B -> LESSTHANOP .

    LEFTPAR         reduce using rule 104 (exp2B -> LESSTHANOP .)
    CTI             reduce using rule 104 (exp2B -> LESSTHANOP .)
    CTF             reduce using rule 104 (exp2B -> LESSTHANOP .)
    ID              reduce using rule 104 (exp2B -> LESSTHANOP .)


state 119

    (105) exp2B -> GREATERTHANOP .

    LEFTPAR         reduce using rule 105 (exp2B -> GREATERTHANOP .)
    CTI             reduce using rule 105 (exp2B -> GREATERTHANOP .)
    CTF             reduce using rule 105 (exp2B -> GREATERTHANOP .)
    ID              reduce using rule 105 (exp2B -> GREATERTHANOP .)


state 120

    (106) exp2B -> DIFFERENTOP .

    LEFTPAR         reduce using rule 106 (exp2B -> DIFFERENTOP .)
    CTI             reduce using rule 106 (exp2B -> DIFFERENTOP .)
    CTF             reduce using rule 106 (exp2B -> DIFFERENTOP .)
    ID              reduce using rule 106 (exp2B -> DIFFERENTOP .)


state 121

    (107) exp2B -> EQUALOP .

    LEFTPAR         reduce using rule 107 (exp2B -> EQUALOP .)
    CTI             reduce using rule 107 (exp2B -> EQUALOP .)
    CTF             reduce using rule 107 (exp2B -> EQUALOP .)
    ID              reduce using rule 107 (exp2B -> EQUALOP .)


state 122

    (108) exp3 -> termino exp3A .

    LESSTHANOP      reduce using rule 108 (exp3 -> termino exp3A .)
    GREATERTHANOP   reduce using rule 108 (exp3 -> termino exp3A .)
    DIFFERENTOP     reduce using rule 108 (exp3 -> termino exp3A .)
    EQUALOP         reduce using rule 108 (exp3 -> termino exp3A .)
    ANDOP           reduce using rule 108 (exp3 -> termino exp3A .)
    OROP            reduce using rule 108 (exp3 -> termino exp3A .)
    TO              reduce using rule 108 (exp3 -> termino exp3A .)
    RIGHTPAR        reduce using rule 108 (exp3 -> termino exp3A .)
    ID              reduce using rule 108 (exp3 -> termino exp3A .)
    READ            reduce using rule 108 (exp3 -> termino exp3A .)
    WRITE           reduce using rule 108 (exp3 -> termino exp3A .)
    IF              reduce using rule 108 (exp3 -> termino exp3A .)
    FROM            reduce using rule 108 (exp3 -> termino exp3A .)
    RIGHTCURLY      reduce using rule 108 (exp3 -> termino exp3A .)
    RIGHTBRACKET    reduce using rule 108 (exp3 -> termino exp3A .)
    DO              reduce using rule 108 (exp3 -> termino exp3A .)
    COMMA           reduce using rule 108 (exp3 -> termino exp3A .)


state 123

    (110) exp3A -> exp3B . operNP1 termino exp3NP1 exp3A
    (126) operNP1 -> .

    LEFTPAR         reduce using rule 126 (operNP1 -> .)
    CTI             reduce using rule 126 (operNP1 -> .)
    CTF             reduce using rule 126 (operNP1 -> .)
    ID              reduce using rule 126 (operNP1 -> .)

    operNP1                        shift and go to state 148

state 124

    (111) exp3A -> empty .

    LESSTHANOP      reduce using rule 111 (exp3A -> empty .)
    GREATERTHANOP   reduce using rule 111 (exp3A -> empty .)
    DIFFERENTOP     reduce using rule 111 (exp3A -> empty .)
    EQUALOP         reduce using rule 111 (exp3A -> empty .)
    ANDOP           reduce using rule 111 (exp3A -> empty .)
    OROP            reduce using rule 111 (exp3A -> empty .)
    TO              reduce using rule 111 (exp3A -> empty .)
    RIGHTPAR        reduce using rule 111 (exp3A -> empty .)
    ID              reduce using rule 111 (exp3A -> empty .)
    READ            reduce using rule 111 (exp3A -> empty .)
    WRITE           reduce using rule 111 (exp3A -> empty .)
    IF              reduce using rule 111 (exp3A -> empty .)
    FROM            reduce using rule 111 (exp3A -> empty .)
    RIGHTCURLY      reduce using rule 111 (exp3A -> empty .)
    RIGHTBRACKET    reduce using rule 111 (exp3A -> empty .)
    DO              reduce using rule 111 (exp3A -> empty .)
    COMMA           reduce using rule 111 (exp3A -> empty .)


state 125

    (112) exp3B -> SUMOP .

    LEFTPAR         reduce using rule 112 (exp3B -> SUMOP .)
    CTI             reduce using rule 112 (exp3B -> SUMOP .)
    CTF             reduce using rule 112 (exp3B -> SUMOP .)
    ID              reduce using rule 112 (exp3B -> SUMOP .)


state 126

    (113) exp3B -> SUBOP .

    LEFTPAR         reduce using rule 113 (exp3B -> SUBOP .)
    CTI             reduce using rule 113 (exp3B -> SUBOP .)
    CTF             reduce using rule 113 (exp3B -> SUBOP .)
    ID              reduce using rule 113 (exp3B -> SUBOP .)


state 127

    (114) termino -> terminoC terminoA .

    SUMOP           reduce using rule 114 (termino -> terminoC terminoA .)
    SUBOP           reduce using rule 114 (termino -> terminoC terminoA .)
    LESSTHANOP      reduce using rule 114 (termino -> terminoC terminoA .)
    GREATERTHANOP   reduce using rule 114 (termino -> terminoC terminoA .)
    DIFFERENTOP     reduce using rule 114 (termino -> terminoC terminoA .)
    EQUALOP         reduce using rule 114 (termino -> terminoC terminoA .)
    ANDOP           reduce using rule 114 (termino -> terminoC terminoA .)
    OROP            reduce using rule 114 (termino -> terminoC terminoA .)
    TO              reduce using rule 114 (termino -> terminoC terminoA .)
    RIGHTPAR        reduce using rule 114 (termino -> terminoC terminoA .)
    ID              reduce using rule 114 (termino -> terminoC terminoA .)
    READ            reduce using rule 114 (termino -> terminoC terminoA .)
    WRITE           reduce using rule 114 (termino -> terminoC terminoA .)
    IF              reduce using rule 114 (termino -> terminoC terminoA .)
    FROM            reduce using rule 114 (termino -> terminoC terminoA .)
    RIGHTCURLY      reduce using rule 114 (termino -> terminoC terminoA .)
    RIGHTBRACKET    reduce using rule 114 (termino -> terminoC terminoA .)
    DO              reduce using rule 114 (termino -> terminoC terminoA .)
    COMMA           reduce using rule 114 (termino -> terminoC terminoA .)


state 128

    (115) terminoA -> terminoB . operNP1 terminoC terminoANP1 terminoA
    (126) operNP1 -> .

    LEFTPAR         reduce using rule 126 (operNP1 -> .)
    CTI             reduce using rule 126 (operNP1 -> .)
    CTF             reduce using rule 126 (operNP1 -> .)
    ID              reduce using rule 126 (operNP1 -> .)

    operNP1                        shift and go to state 149

state 129

    (116) terminoA -> empty .

    SUMOP           reduce using rule 116 (terminoA -> empty .)
    SUBOP           reduce using rule 116 (terminoA -> empty .)
    LESSTHANOP      reduce using rule 116 (terminoA -> empty .)
    GREATERTHANOP   reduce using rule 116 (terminoA -> empty .)
    DIFFERENTOP     reduce using rule 116 (terminoA -> empty .)
    EQUALOP         reduce using rule 116 (terminoA -> empty .)
    ANDOP           reduce using rule 116 (terminoA -> empty .)
    OROP            reduce using rule 116 (terminoA -> empty .)
    TO              reduce using rule 116 (terminoA -> empty .)
    RIGHTPAR        reduce using rule 116 (terminoA -> empty .)
    ID              reduce using rule 116 (terminoA -> empty .)
    READ            reduce using rule 116 (terminoA -> empty .)
    WRITE           reduce using rule 116 (terminoA -> empty .)
    IF              reduce using rule 116 (terminoA -> empty .)
    FROM            reduce using rule 116 (terminoA -> empty .)
    RIGHTCURLY      reduce using rule 116 (terminoA -> empty .)
    RIGHTBRACKET    reduce using rule 116 (terminoA -> empty .)
    DO              reduce using rule 116 (terminoA -> empty .)
    COMMA           reduce using rule 116 (terminoA -> empty .)


state 130

    (118) terminoB -> MULOP .

    LEFTPAR         reduce using rule 118 (terminoB -> MULOP .)
    CTI             reduce using rule 118 (terminoB -> MULOP .)
    CTF             reduce using rule 118 (terminoB -> MULOP .)
    ID              reduce using rule 118 (terminoB -> MULOP .)


state 131

    (119) terminoB -> DIVOP .

    LEFTPAR         reduce using rule 119 (terminoB -> DIVOP .)
    CTI             reduce using rule 119 (terminoB -> DIVOP .)
    CTF             reduce using rule 119 (terminoB -> DIVOP .)
    ID              reduce using rule 119 (terminoB -> DIVOP .)


state 132

    (122) factor -> LEFTPAR operNP1 . exp RIGHTPAR factorNP1
    (92) exp -> . exp1 expA
    (96) exp1 -> . exp2 exp1A
    (100) exp2 -> . exp3 exp2A
    (108) exp3 -> . termino exp3A
    (114) termino -> . terminoC terminoA
    (120) terminoC -> . factor
    (121) terminoC -> . llamada
    (122) factor -> . LEFTPAR operNP1 exp RIGHTPAR factorNP1
    (123) factor -> . CTI factorNP2
    (124) factor -> . CTF factorNP3
    (125) factor -> . variable
    (60) llamada -> . ID llamadaNP1 LEFTPAR loeNP2 primerparam llamadaA RIGHTPAR llamadaNP3
    (86) variable -> . ID variableNP1 variableA

    LEFTPAR         shift and go to state 87
    CTI             shift and go to state 88
    CTF             shift and go to state 89
    ID              shift and go to state 63

    exp                            shift and go to state 150
    exp1                           shift and go to state 80
    exp2                           shift and go to state 81
    exp3                           shift and go to state 82
    termino                        shift and go to state 83
    terminoC                       shift and go to state 84
    factor                         shift and go to state 85
    llamada                        shift and go to state 86
    variable                       shift and go to state 90

state 133

    (123) factor -> CTI factorNP2 .

    MULOP           reduce using rule 123 (factor -> CTI factorNP2 .)
    DIVOP           reduce using rule 123 (factor -> CTI factorNP2 .)
    SUMOP           reduce using rule 123 (factor -> CTI factorNP2 .)
    SUBOP           reduce using rule 123 (factor -> CTI factorNP2 .)
    LESSTHANOP      reduce using rule 123 (factor -> CTI factorNP2 .)
    GREATERTHANOP   reduce using rule 123 (factor -> CTI factorNP2 .)
    DIFFERENTOP     reduce using rule 123 (factor -> CTI factorNP2 .)
    EQUALOP         reduce using rule 123 (factor -> CTI factorNP2 .)
    ANDOP           reduce using rule 123 (factor -> CTI factorNP2 .)
    OROP            reduce using rule 123 (factor -> CTI factorNP2 .)
    TO              reduce using rule 123 (factor -> CTI factorNP2 .)
    RIGHTPAR        reduce using rule 123 (factor -> CTI factorNP2 .)
    ID              reduce using rule 123 (factor -> CTI factorNP2 .)
    READ            reduce using rule 123 (factor -> CTI factorNP2 .)
    WRITE           reduce using rule 123 (factor -> CTI factorNP2 .)
    IF              reduce using rule 123 (factor -> CTI factorNP2 .)
    FROM            reduce using rule 123 (factor -> CTI factorNP2 .)
    RIGHTCURLY      reduce using rule 123 (factor -> CTI factorNP2 .)
    RIGHTBRACKET    reduce using rule 123 (factor -> CTI factorNP2 .)
    DO              reduce using rule 123 (factor -> CTI factorNP2 .)
    COMMA           reduce using rule 123 (factor -> CTI factorNP2 .)


state 134

    (124) factor -> CTF factorNP3 .

    MULOP           reduce using rule 124 (factor -> CTF factorNP3 .)
    DIVOP           reduce using rule 124 (factor -> CTF factorNP3 .)
    SUMOP           reduce using rule 124 (factor -> CTF factorNP3 .)
    SUBOP           reduce using rule 124 (factor -> CTF factorNP3 .)
    LESSTHANOP      reduce using rule 124 (factor -> CTF factorNP3 .)
    GREATERTHANOP   reduce using rule 124 (factor -> CTF factorNP3 .)
    DIFFERENTOP     reduce using rule 124 (factor -> CTF factorNP3 .)
    EQUALOP         reduce using rule 124 (factor -> CTF factorNP3 .)
    ANDOP           reduce using rule 124 (factor -> CTF factorNP3 .)
    OROP            reduce using rule 124 (factor -> CTF factorNP3 .)
    TO              reduce using rule 124 (factor -> CTF factorNP3 .)
    RIGHTPAR        reduce using rule 124 (factor -> CTF factorNP3 .)
    ID              reduce using rule 124 (factor -> CTF factorNP3 .)
    READ            reduce using rule 124 (factor -> CTF factorNP3 .)
    WRITE           reduce using rule 124 (factor -> CTF factorNP3 .)
    IF              reduce using rule 124 (factor -> CTF factorNP3 .)
    FROM            reduce using rule 124 (factor -> CTF factorNP3 .)
    RIGHTCURLY      reduce using rule 124 (factor -> CTF factorNP3 .)
    RIGHTBRACKET    reduce using rule 124 (factor -> CTF factorNP3 .)
    DO              reduce using rule 124 (factor -> CTF factorNP3 .)
    COMMA           reduce using rule 124 (factor -> CTF factorNP3 .)


state 135

    (27) funcion -> FUNC funcionA funcionNP1 ID funcionNP2 LEFTPAR funcionB RIGHTPAR . SEMICOLON funcionC bloque

    SEMICOLON       shift and go to state 151


state 136

    (42) params -> tipoSimple paramsNP1 . ID paramsA

    ID              shift and go to state 152


state 137

    (22) varsE -> COMMA ID . varsNP3 varsNP6 varsE
    (24) varsNP3 -> .

    COMMA           reduce using rule 24 (varsNP3 -> .)
    SEMICOLON       reduce using rule 24 (varsNP3 -> .)

    varsNP3                        shift and go to state 153

state 138

    (16) varsC -> LEFTBRACKET CTI varsNP4 . RIGHTBRACKET varsD

    RIGHTBRACKET    shift and go to state 154


state 139

    (57) asignacion -> variable ASSIGNOP asignacionNP1 exp . asignacionNP2
    (59) asignacionNP2 -> .

    ID              reduce using rule 59 (asignacionNP2 -> .)
    READ            reduce using rule 59 (asignacionNP2 -> .)
    WRITE           reduce using rule 59 (asignacionNP2 -> .)
    IF              reduce using rule 59 (asignacionNP2 -> .)
    FROM            reduce using rule 59 (asignacionNP2 -> .)
    RIGHTCURLY      reduce using rule 59 (asignacionNP2 -> .)

    asignacionNP2                  shift and go to state 155

state 140

    (60) llamada -> ID llamadaNP1 LEFTPAR loeNP2 . primerparam llamadaA RIGHTPAR llamadaNP3
    (61) primerparam -> . exp loeNP1
    (62) primerparam -> . empty
    (92) exp -> . exp1 expA
    (130) empty -> .
    (96) exp1 -> . exp2 exp1A
    (100) exp2 -> . exp3 exp2A
    (108) exp3 -> . termino exp3A
    (114) termino -> . terminoC terminoA
    (120) terminoC -> . factor
    (121) terminoC -> . llamada
    (122) factor -> . LEFTPAR operNP1 exp RIGHTPAR factorNP1
    (123) factor -> . CTI factorNP2
    (124) factor -> . CTF factorNP3
    (125) factor -> . variable
    (60) llamada -> . ID llamadaNP1 LEFTPAR loeNP2 primerparam llamadaA RIGHTPAR llamadaNP3
    (86) variable -> . ID variableNP1 variableA

    COMMA           reduce using rule 130 (empty -> .)
    RIGHTPAR        reduce using rule 130 (empty -> .)
    LEFTPAR         shift and go to state 87
    CTI             shift and go to state 88
    CTF             shift and go to state 89
    ID              shift and go to state 63

    primerparam                    shift and go to state 156
    exp                            shift and go to state 157
    empty                          shift and go to state 158
    exp1                           shift and go to state 80
    exp2                           shift and go to state 81
    exp3                           shift and go to state 82
    termino                        shift and go to state 83
    terminoC                       shift and go to state 84
    factor                         shift and go to state 85
    llamada                        shift and go to state 86
    variable                       shift and go to state 90

state 141

    (88) variableA -> LEFTBRACKET exp . RIGHTBRACKET variableB

    RIGHTBRACKET    shift and go to state 159


state 142

    (69) escritura -> WRITE escrituraNP1 LEFTPAR loeNP2 . escrituraA escrituraB RIGHTPAR escrituraNP3
    (73) escrituraA -> . exp loeNP1
    (74) escrituraA -> . CTSTRING escrituraNP2
    (92) exp -> . exp1 expA
    (96) exp1 -> . exp2 exp1A
    (100) exp2 -> . exp3 exp2A
    (108) exp3 -> . termino exp3A
    (114) termino -> . terminoC terminoA
    (120) terminoC -> . factor
    (121) terminoC -> . llamada
    (122) factor -> . LEFTPAR operNP1 exp RIGHTPAR factorNP1
    (123) factor -> . CTI factorNP2
    (124) factor -> . CTF factorNP3
    (125) factor -> . variable
    (60) llamada -> . ID llamadaNP1 LEFTPAR loeNP2 primerparam llamadaA RIGHTPAR llamadaNP3
    (86) variable -> . ID variableNP1 variableA

    CTSTRING        shift and go to state 162
    LEFTPAR         shift and go to state 87
    CTI             shift and go to state 88
    CTF             shift and go to state 89
    ID              shift and go to state 63

    escrituraA                     shift and go to state 160
    exp                            shift and go to state 161
    exp1                           shift and go to state 80
    exp2                           shift and go to state 81
    exp3                           shift and go to state 82
    termino                        shift and go to state 83
    terminoC                       shift and go to state 84
    factor                         shift and go to state 85
    llamada                        shift and go to state 86
    variable                       shift and go to state 90

state 143

    (79) condicion -> IF LEFTPAR exp condicionNP1 . RIGHTPAR bloque condicionA

    RIGHTPAR        shift and go to state 163


state 144

    (85) ciclo -> FROM exp TO exp . DO bloque

    DO              shift and go to state 164


state 145

    (94) expA -> OROP operNP1 . exp1 expNP1 expA
    (96) exp1 -> . exp2 exp1A
    (100) exp2 -> . exp3 exp2A
    (108) exp3 -> . termino exp3A
    (114) termino -> . terminoC terminoA
    (120) terminoC -> . factor
    (121) terminoC -> . llamada
    (122) factor -> . LEFTPAR operNP1 exp RIGHTPAR factorNP1
    (123) factor -> . CTI factorNP2
    (124) factor -> . CTF factorNP3
    (125) factor -> . variable
    (60) llamada -> . ID llamadaNP1 LEFTPAR loeNP2 primerparam llamadaA RIGHTPAR llamadaNP3
    (86) variable -> . ID variableNP1 variableA

    LEFTPAR         shift and go to state 87
    CTI             shift and go to state 88
    CTF             shift and go to state 89
    ID              shift and go to state 63

    exp1                           shift and go to state 165
    exp2                           shift and go to state 81
    exp3                           shift and go to state 82
    termino                        shift and go to state 83
    terminoC                       shift and go to state 84
    factor                         shift and go to state 85
    llamada                        shift and go to state 86
    variable                       shift and go to state 90

state 146

    (98) exp1A -> ANDOP operNP1 . exp2 exp1NP1 exp1A
    (100) exp2 -> . exp3 exp2A
    (108) exp3 -> . termino exp3A
    (114) termino -> . terminoC terminoA
    (120) terminoC -> . factor
    (121) terminoC -> . llamada
    (122) factor -> . LEFTPAR operNP1 exp RIGHTPAR factorNP1
    (123) factor -> . CTI factorNP2
    (124) factor -> . CTF factorNP3
    (125) factor -> . variable
    (60) llamada -> . ID llamadaNP1 LEFTPAR loeNP2 primerparam llamadaA RIGHTPAR llamadaNP3
    (86) variable -> . ID variableNP1 variableA

    LEFTPAR         shift and go to state 87
    CTI             shift and go to state 88
    CTF             shift and go to state 89
    ID              shift and go to state 63

    exp2                           shift and go to state 166
    exp3                           shift and go to state 82
    termino                        shift and go to state 83
    terminoC                       shift and go to state 84
    factor                         shift and go to state 85
    llamada                        shift and go to state 86
    variable                       shift and go to state 90

state 147

    (101) exp2A -> exp2B operNP1 . exp3 exp2ANP1
    (108) exp3 -> . termino exp3A
    (114) termino -> . terminoC terminoA
    (120) terminoC -> . factor
    (121) terminoC -> . llamada
    (122) factor -> . LEFTPAR operNP1 exp RIGHTPAR factorNP1
    (123) factor -> . CTI factorNP2
    (124) factor -> . CTF factorNP3
    (125) factor -> . variable
    (60) llamada -> . ID llamadaNP1 LEFTPAR loeNP2 primerparam llamadaA RIGHTPAR llamadaNP3
    (86) variable -> . ID variableNP1 variableA

    LEFTPAR         shift and go to state 87
    CTI             shift and go to state 88
    CTF             shift and go to state 89
    ID              shift and go to state 63

    exp3                           shift and go to state 167
    termino                        shift and go to state 83
    terminoC                       shift and go to state 84
    factor                         shift and go to state 85
    llamada                        shift and go to state 86
    variable                       shift and go to state 90

state 148

    (110) exp3A -> exp3B operNP1 . termino exp3NP1 exp3A
    (114) termino -> . terminoC terminoA
    (120) terminoC -> . factor
    (121) terminoC -> . llamada
    (122) factor -> . LEFTPAR operNP1 exp RIGHTPAR factorNP1
    (123) factor -> . CTI factorNP2
    (124) factor -> . CTF factorNP3
    (125) factor -> . variable
    (60) llamada -> . ID llamadaNP1 LEFTPAR loeNP2 primerparam llamadaA RIGHTPAR llamadaNP3
    (86) variable -> . ID variableNP1 variableA

    LEFTPAR         shift and go to state 87
    CTI             shift and go to state 88
    CTF             shift and go to state 89
    ID              shift and go to state 63

    termino                        shift and go to state 168
    terminoC                       shift and go to state 84
    factor                         shift and go to state 85
    llamada                        shift and go to state 86
    variable                       shift and go to state 90

state 149

    (115) terminoA -> terminoB operNP1 . terminoC terminoANP1 terminoA
    (120) terminoC -> . factor
    (121) terminoC -> . llamada
    (122) factor -> . LEFTPAR operNP1 exp RIGHTPAR factorNP1
    (123) factor -> . CTI factorNP2
    (124) factor -> . CTF factorNP3
    (125) factor -> . variable
    (60) llamada -> . ID llamadaNP1 LEFTPAR loeNP2 primerparam llamadaA RIGHTPAR llamadaNP3
    (86) variable -> . ID variableNP1 variableA

    LEFTPAR         shift and go to state 87
    CTI             shift and go to state 88
    CTF             shift and go to state 89
    ID              shift and go to state 63

    terminoC                       shift and go to state 169
    factor                         shift and go to state 85
    llamada                        shift and go to state 86
    variable                       shift and go to state 90

state 150

    (122) factor -> LEFTPAR operNP1 exp . RIGHTPAR factorNP1

    RIGHTPAR        shift and go to state 170


state 151

    (27) funcion -> FUNC funcionA funcionNP1 ID funcionNP2 LEFTPAR funcionB RIGHTPAR SEMICOLON . funcionC bloque
    (35) funcionC -> . vars
    (36) funcionC -> . empty
    (8) vars -> . varsNP1 VAR varsA varsNP7
    (130) empty -> .
    (10) varsNP1 -> .

    LEFTCURLY       reduce using rule 130 (empty -> .)
    VAR             reduce using rule 10 (varsNP1 -> .)

    funcionC                       shift and go to state 171
    vars                           shift and go to state 172
    empty                          shift and go to state 173
    varsNP1                        shift and go to state 10

state 152

    (42) params -> tipoSimple paramsNP1 ID . paramsA
    (43) paramsA -> . COMMA tipoSimple paramsNP1 ID paramsA
    (44) paramsA -> . empty
    (130) empty -> .

    COMMA           shift and go to state 175
    RIGHTPAR        reduce using rule 130 (empty -> .)

    paramsA                        shift and go to state 174
    empty                          shift and go to state 176

state 153

    (22) varsE -> COMMA ID varsNP3 . varsNP6 varsE
    (15) varsNP6 -> .

    COMMA           reduce using rule 15 (varsNP6 -> .)
    SEMICOLON       reduce using rule 15 (varsNP6 -> .)

    varsNP6                        shift and go to state 177

state 154

    (16) varsC -> LEFTBRACKET CTI varsNP4 RIGHTBRACKET . varsD
    (19) varsD -> . LEFTBRACKET CTI varsNP5 RIGHTBRACKET
    (20) varsD -> . empty
    (130) empty -> .

    LEFTBRACKET     shift and go to state 178
    SEMICOLON       reduce using rule 130 (empty -> .)

    varsD                          shift and go to state 179
    empty                          shift and go to state 180

state 155

    (57) asignacion -> variable ASSIGNOP asignacionNP1 exp asignacionNP2 .

    ID              reduce using rule 57 (asignacion -> variable ASSIGNOP asignacionNP1 exp asignacionNP2 .)
    READ            reduce using rule 57 (asignacion -> variable ASSIGNOP asignacionNP1 exp asignacionNP2 .)
    WRITE           reduce using rule 57 (asignacion -> variable ASSIGNOP asignacionNP1 exp asignacionNP2 .)
    IF              reduce using rule 57 (asignacion -> variable ASSIGNOP asignacionNP1 exp asignacionNP2 .)
    FROM            reduce using rule 57 (asignacion -> variable ASSIGNOP asignacionNP1 exp asignacionNP2 .)
    RIGHTCURLY      reduce using rule 57 (asignacion -> variable ASSIGNOP asignacionNP1 exp asignacionNP2 .)


state 156

    (60) llamada -> ID llamadaNP1 LEFTPAR loeNP2 primerparam . llamadaA RIGHTPAR llamadaNP3
    (63) llamadaA -> . COMMA exp loeNP1 llamadaA
    (64) llamadaA -> . empty
    (130) empty -> .

    COMMA           shift and go to state 182
    RIGHTPAR        reduce using rule 130 (empty -> .)

    llamadaA                       shift and go to state 181
    empty                          shift and go to state 183

state 157

    (61) primerparam -> exp . loeNP1
    (75) loeNP1 -> .

    COMMA           reduce using rule 75 (loeNP1 -> .)
    RIGHTPAR        reduce using rule 75 (loeNP1 -> .)

    loeNP1                         shift and go to state 184

state 158

    (62) primerparam -> empty .

    COMMA           reduce using rule 62 (primerparam -> empty .)
    RIGHTPAR        reduce using rule 62 (primerparam -> empty .)


state 159

    (88) variableA -> LEFTBRACKET exp RIGHTBRACKET . variableB
    (90) variableB -> . LEFTBRACKET exp RIGHTBRACKET
    (91) variableB -> . empty
    (130) empty -> .

    LEFTBRACKET     shift and go to state 185
    ASSIGNOP        reduce using rule 130 (empty -> .)
    MULOP           reduce using rule 130 (empty -> .)
    DIVOP           reduce using rule 130 (empty -> .)
    SUMOP           reduce using rule 130 (empty -> .)
    SUBOP           reduce using rule 130 (empty -> .)
    LESSTHANOP      reduce using rule 130 (empty -> .)
    GREATERTHANOP   reduce using rule 130 (empty -> .)
    DIFFERENTOP     reduce using rule 130 (empty -> .)
    EQUALOP         reduce using rule 130 (empty -> .)
    ANDOP           reduce using rule 130 (empty -> .)
    OROP            reduce using rule 130 (empty -> .)
    TO              reduce using rule 130 (empty -> .)
    RIGHTPAR        reduce using rule 130 (empty -> .)
    ID              reduce using rule 130 (empty -> .)
    READ            reduce using rule 130 (empty -> .)
    WRITE           reduce using rule 130 (empty -> .)
    IF              reduce using rule 130 (empty -> .)
    FROM            reduce using rule 130 (empty -> .)
    RIGHTCURLY      reduce using rule 130 (empty -> .)
    RIGHTBRACKET    reduce using rule 130 (empty -> .)
    DO              reduce using rule 130 (empty -> .)
    COMMA           reduce using rule 130 (empty -> .)

    variableB                      shift and go to state 186
    empty                          shift and go to state 187

state 160

    (69) escritura -> WRITE escrituraNP1 LEFTPAR loeNP2 escrituraA . escrituraB RIGHTPAR escrituraNP3
    (77) escrituraB -> . COMMA escrituraA escrituraB
    (78) escrituraB -> . empty
    (130) empty -> .

    COMMA           shift and go to state 189
    RIGHTPAR        reduce using rule 130 (empty -> .)

    escrituraB                     shift and go to state 188
    empty                          shift and go to state 190

state 161

    (73) escrituraA -> exp . loeNP1
    (75) loeNP1 -> .

    COMMA           reduce using rule 75 (loeNP1 -> .)
    RIGHTPAR        reduce using rule 75 (loeNP1 -> .)

    loeNP1                         shift and go to state 191

state 162

    (74) escrituraA -> CTSTRING . escrituraNP2
    (76) escrituraNP2 -> .

    COMMA           reduce using rule 76 (escrituraNP2 -> .)
    RIGHTPAR        reduce using rule 76 (escrituraNP2 -> .)

    escrituraNP2                   shift and go to state 192

state 163

    (79) condicion -> IF LEFTPAR exp condicionNP1 RIGHTPAR . bloque condicionA
    (46) bloque -> . LEFTCURLY bloqueA RIGHTCURLY

    LEFTCURLY       shift and go to state 39

    bloque                         shift and go to state 193

state 164

    (85) ciclo -> FROM exp TO exp DO . bloque
    (46) bloque -> . LEFTCURLY bloqueA RIGHTCURLY

    LEFTCURLY       shift and go to state 39

    bloque                         shift and go to state 194

state 165

    (94) expA -> OROP operNP1 exp1 . expNP1 expA
    (93) expNP1 -> .

    OROP            reduce using rule 93 (expNP1 -> .)
    TO              reduce using rule 93 (expNP1 -> .)
    RIGHTPAR        reduce using rule 93 (expNP1 -> .)
    ID              reduce using rule 93 (expNP1 -> .)
    READ            reduce using rule 93 (expNP1 -> .)
    WRITE           reduce using rule 93 (expNP1 -> .)
    IF              reduce using rule 93 (expNP1 -> .)
    FROM            reduce using rule 93 (expNP1 -> .)
    RIGHTCURLY      reduce using rule 93 (expNP1 -> .)
    RIGHTBRACKET    reduce using rule 93 (expNP1 -> .)
    DO              reduce using rule 93 (expNP1 -> .)
    COMMA           reduce using rule 93 (expNP1 -> .)

    expNP1                         shift and go to state 195

state 166

    (98) exp1A -> ANDOP operNP1 exp2 . exp1NP1 exp1A
    (97) exp1NP1 -> .

    ANDOP           reduce using rule 97 (exp1NP1 -> .)
    OROP            reduce using rule 97 (exp1NP1 -> .)
    TO              reduce using rule 97 (exp1NP1 -> .)
    RIGHTPAR        reduce using rule 97 (exp1NP1 -> .)
    ID              reduce using rule 97 (exp1NP1 -> .)
    READ            reduce using rule 97 (exp1NP1 -> .)
    WRITE           reduce using rule 97 (exp1NP1 -> .)
    IF              reduce using rule 97 (exp1NP1 -> .)
    FROM            reduce using rule 97 (exp1NP1 -> .)
    RIGHTCURLY      reduce using rule 97 (exp1NP1 -> .)
    RIGHTBRACKET    reduce using rule 97 (exp1NP1 -> .)
    DO              reduce using rule 97 (exp1NP1 -> .)
    COMMA           reduce using rule 97 (exp1NP1 -> .)

    exp1NP1                        shift and go to state 196

state 167

    (101) exp2A -> exp2B operNP1 exp3 . exp2ANP1
    (103) exp2ANP1 -> .

    ANDOP           reduce using rule 103 (exp2ANP1 -> .)
    OROP            reduce using rule 103 (exp2ANP1 -> .)
    TO              reduce using rule 103 (exp2ANP1 -> .)
    RIGHTPAR        reduce using rule 103 (exp2ANP1 -> .)
    ID              reduce using rule 103 (exp2ANP1 -> .)
    READ            reduce using rule 103 (exp2ANP1 -> .)
    WRITE           reduce using rule 103 (exp2ANP1 -> .)
    IF              reduce using rule 103 (exp2ANP1 -> .)
    FROM            reduce using rule 103 (exp2ANP1 -> .)
    RIGHTCURLY      reduce using rule 103 (exp2ANP1 -> .)
    RIGHTBRACKET    reduce using rule 103 (exp2ANP1 -> .)
    DO              reduce using rule 103 (exp2ANP1 -> .)
    COMMA           reduce using rule 103 (exp2ANP1 -> .)

    exp2ANP1                       shift and go to state 197

state 168

    (110) exp3A -> exp3B operNP1 termino . exp3NP1 exp3A
    (109) exp3NP1 -> .

    SUMOP           reduce using rule 109 (exp3NP1 -> .)
    SUBOP           reduce using rule 109 (exp3NP1 -> .)
    LESSTHANOP      reduce using rule 109 (exp3NP1 -> .)
    GREATERTHANOP   reduce using rule 109 (exp3NP1 -> .)
    DIFFERENTOP     reduce using rule 109 (exp3NP1 -> .)
    EQUALOP         reduce using rule 109 (exp3NP1 -> .)
    ANDOP           reduce using rule 109 (exp3NP1 -> .)
    OROP            reduce using rule 109 (exp3NP1 -> .)
    TO              reduce using rule 109 (exp3NP1 -> .)
    RIGHTPAR        reduce using rule 109 (exp3NP1 -> .)
    ID              reduce using rule 109 (exp3NP1 -> .)
    READ            reduce using rule 109 (exp3NP1 -> .)
    WRITE           reduce using rule 109 (exp3NP1 -> .)
    IF              reduce using rule 109 (exp3NP1 -> .)
    FROM            reduce using rule 109 (exp3NP1 -> .)
    RIGHTCURLY      reduce using rule 109 (exp3NP1 -> .)
    RIGHTBRACKET    reduce using rule 109 (exp3NP1 -> .)
    DO              reduce using rule 109 (exp3NP1 -> .)
    COMMA           reduce using rule 109 (exp3NP1 -> .)

    exp3NP1                        shift and go to state 198

state 169

    (115) terminoA -> terminoB operNP1 terminoC . terminoANP1 terminoA
    (117) terminoANP1 -> .

    MULOP           reduce using rule 117 (terminoANP1 -> .)
    DIVOP           reduce using rule 117 (terminoANP1 -> .)
    SUMOP           reduce using rule 117 (terminoANP1 -> .)
    SUBOP           reduce using rule 117 (terminoANP1 -> .)
    LESSTHANOP      reduce using rule 117 (terminoANP1 -> .)
    GREATERTHANOP   reduce using rule 117 (terminoANP1 -> .)
    DIFFERENTOP     reduce using rule 117 (terminoANP1 -> .)
    EQUALOP         reduce using rule 117 (terminoANP1 -> .)
    ANDOP           reduce using rule 117 (terminoANP1 -> .)
    OROP            reduce using rule 117 (terminoANP1 -> .)
    TO              reduce using rule 117 (terminoANP1 -> .)
    RIGHTPAR        reduce using rule 117 (terminoANP1 -> .)
    ID              reduce using rule 117 (terminoANP1 -> .)
    READ            reduce using rule 117 (terminoANP1 -> .)
    WRITE           reduce using rule 117 (terminoANP1 -> .)
    IF              reduce using rule 117 (terminoANP1 -> .)
    FROM            reduce using rule 117 (terminoANP1 -> .)
    RIGHTCURLY      reduce using rule 117 (terminoANP1 -> .)
    RIGHTBRACKET    reduce using rule 117 (terminoANP1 -> .)
    DO              reduce using rule 117 (terminoANP1 -> .)
    COMMA           reduce using rule 117 (terminoANP1 -> .)

    terminoANP1                    shift and go to state 199

state 170

    (122) factor -> LEFTPAR operNP1 exp RIGHTPAR . factorNP1
    (127) factorNP1 -> .

    MULOP           reduce using rule 127 (factorNP1 -> .)
    DIVOP           reduce using rule 127 (factorNP1 -> .)
    SUMOP           reduce using rule 127 (factorNP1 -> .)
    SUBOP           reduce using rule 127 (factorNP1 -> .)
    LESSTHANOP      reduce using rule 127 (factorNP1 -> .)
    GREATERTHANOP   reduce using rule 127 (factorNP1 -> .)
    DIFFERENTOP     reduce using rule 127 (factorNP1 -> .)
    EQUALOP         reduce using rule 127 (factorNP1 -> .)
    ANDOP           reduce using rule 127 (factorNP1 -> .)
    OROP            reduce using rule 127 (factorNP1 -> .)
    TO              reduce using rule 127 (factorNP1 -> .)
    RIGHTPAR        reduce using rule 127 (factorNP1 -> .)
    ID              reduce using rule 127 (factorNP1 -> .)
    READ            reduce using rule 127 (factorNP1 -> .)
    WRITE           reduce using rule 127 (factorNP1 -> .)
    IF              reduce using rule 127 (factorNP1 -> .)
    FROM            reduce using rule 127 (factorNP1 -> .)
    RIGHTCURLY      reduce using rule 127 (factorNP1 -> .)
    RIGHTBRACKET    reduce using rule 127 (factorNP1 -> .)
    DO              reduce using rule 127 (factorNP1 -> .)
    COMMA           reduce using rule 127 (factorNP1 -> .)

    factorNP1                      shift and go to state 200

state 171

    (27) funcion -> FUNC funcionA funcionNP1 ID funcionNP2 LEFTPAR funcionB RIGHTPAR SEMICOLON funcionC . bloque
    (46) bloque -> . LEFTCURLY bloqueA RIGHTCURLY

    LEFTCURLY       shift and go to state 39

    bloque                         shift and go to state 201

state 172

    (35) funcionC -> vars .

    LEFTCURLY       reduce using rule 35 (funcionC -> vars .)


state 173

    (36) funcionC -> empty .

    LEFTCURLY       reduce using rule 36 (funcionC -> empty .)


state 174

    (42) params -> tipoSimple paramsNP1 ID paramsA .

    RIGHTPAR        reduce using rule 42 (params -> tipoSimple paramsNP1 ID paramsA .)


state 175

    (43) paramsA -> COMMA . tipoSimple paramsNP1 ID paramsA
    (39) tipoSimple -> . INT tipoSimpleNP1
    (40) tipoSimple -> . FLOAT tipoSimpleNP1

    INT             shift and go to state 22
    FLOAT           shift and go to state 23

    tipoSimple                     shift and go to state 202

state 176

    (44) paramsA -> empty .

    RIGHTPAR        reduce using rule 44 (paramsA -> empty .)


state 177

    (22) varsE -> COMMA ID varsNP3 varsNP6 . varsE
    (22) varsE -> . COMMA ID varsNP3 varsNP6 varsE
    (23) varsE -> . empty
    (130) empty -> .

    COMMA           shift and go to state 96
    SEMICOLON       reduce using rule 130 (empty -> .)

    varsE                          shift and go to state 203
    empty                          shift and go to state 97

state 178

    (19) varsD -> LEFTBRACKET . CTI varsNP5 RIGHTBRACKET

    CTI             shift and go to state 204


state 179

    (16) varsC -> LEFTBRACKET CTI varsNP4 RIGHTBRACKET varsD .

    SEMICOLON       reduce using rule 16 (varsC -> LEFTBRACKET CTI varsNP4 RIGHTBRACKET varsD .)


state 180

    (20) varsD -> empty .

    SEMICOLON       reduce using rule 20 (varsD -> empty .)


state 181

    (60) llamada -> ID llamadaNP1 LEFTPAR loeNP2 primerparam llamadaA . RIGHTPAR llamadaNP3

    RIGHTPAR        shift and go to state 205


state 182

    (63) llamadaA -> COMMA . exp loeNP1 llamadaA
    (92) exp -> . exp1 expA
    (96) exp1 -> . exp2 exp1A
    (100) exp2 -> . exp3 exp2A
    (108) exp3 -> . termino exp3A
    (114) termino -> . terminoC terminoA
    (120) terminoC -> . factor
    (121) terminoC -> . llamada
    (122) factor -> . LEFTPAR operNP1 exp RIGHTPAR factorNP1
    (123) factor -> . CTI factorNP2
    (124) factor -> . CTF factorNP3
    (125) factor -> . variable
    (60) llamada -> . ID llamadaNP1 LEFTPAR loeNP2 primerparam llamadaA RIGHTPAR llamadaNP3
    (86) variable -> . ID variableNP1 variableA

    LEFTPAR         shift and go to state 87
    CTI             shift and go to state 88
    CTF             shift and go to state 89
    ID              shift and go to state 63

    exp                            shift and go to state 206
    exp1                           shift and go to state 80
    exp2                           shift and go to state 81
    exp3                           shift and go to state 82
    termino                        shift and go to state 83
    terminoC                       shift and go to state 84
    factor                         shift and go to state 85
    llamada                        shift and go to state 86
    variable                       shift and go to state 90

state 183

    (64) llamadaA -> empty .

    RIGHTPAR        reduce using rule 64 (llamadaA -> empty .)


state 184

    (61) primerparam -> exp loeNP1 .

    COMMA           reduce using rule 61 (primerparam -> exp loeNP1 .)
    RIGHTPAR        reduce using rule 61 (primerparam -> exp loeNP1 .)


state 185

    (90) variableB -> LEFTBRACKET . exp RIGHTBRACKET
    (92) exp -> . exp1 expA
    (96) exp1 -> . exp2 exp1A
    (100) exp2 -> . exp3 exp2A
    (108) exp3 -> . termino exp3A
    (114) termino -> . terminoC terminoA
    (120) terminoC -> . factor
    (121) terminoC -> . llamada
    (122) factor -> . LEFTPAR operNP1 exp RIGHTPAR factorNP1
    (123) factor -> . CTI factorNP2
    (124) factor -> . CTF factorNP3
    (125) factor -> . variable
    (60) llamada -> . ID llamadaNP1 LEFTPAR loeNP2 primerparam llamadaA RIGHTPAR llamadaNP3
    (86) variable -> . ID variableNP1 variableA

    LEFTPAR         shift and go to state 87
    CTI             shift and go to state 88
    CTF             shift and go to state 89
    ID              shift and go to state 63

    exp                            shift and go to state 207
    exp1                           shift and go to state 80
    exp2                           shift and go to state 81
    exp3                           shift and go to state 82
    termino                        shift and go to state 83
    terminoC                       shift and go to state 84
    factor                         shift and go to state 85
    llamada                        shift and go to state 86
    variable                       shift and go to state 90

state 186

    (88) variableA -> LEFTBRACKET exp RIGHTBRACKET variableB .

    ASSIGNOP        reduce using rule 88 (variableA -> LEFTBRACKET exp RIGHTBRACKET variableB .)
    MULOP           reduce using rule 88 (variableA -> LEFTBRACKET exp RIGHTBRACKET variableB .)
    DIVOP           reduce using rule 88 (variableA -> LEFTBRACKET exp RIGHTBRACKET variableB .)
    SUMOP           reduce using rule 88 (variableA -> LEFTBRACKET exp RIGHTBRACKET variableB .)
    SUBOP           reduce using rule 88 (variableA -> LEFTBRACKET exp RIGHTBRACKET variableB .)
    LESSTHANOP      reduce using rule 88 (variableA -> LEFTBRACKET exp RIGHTBRACKET variableB .)
    GREATERTHANOP   reduce using rule 88 (variableA -> LEFTBRACKET exp RIGHTBRACKET variableB .)
    DIFFERENTOP     reduce using rule 88 (variableA -> LEFTBRACKET exp RIGHTBRACKET variableB .)
    EQUALOP         reduce using rule 88 (variableA -> LEFTBRACKET exp RIGHTBRACKET variableB .)
    ANDOP           reduce using rule 88 (variableA -> LEFTBRACKET exp RIGHTBRACKET variableB .)
    OROP            reduce using rule 88 (variableA -> LEFTBRACKET exp RIGHTBRACKET variableB .)
    TO              reduce using rule 88 (variableA -> LEFTBRACKET exp RIGHTBRACKET variableB .)
    RIGHTPAR        reduce using rule 88 (variableA -> LEFTBRACKET exp RIGHTBRACKET variableB .)
    ID              reduce using rule 88 (variableA -> LEFTBRACKET exp RIGHTBRACKET variableB .)
    READ            reduce using rule 88 (variableA -> LEFTBRACKET exp RIGHTBRACKET variableB .)
    WRITE           reduce using rule 88 (variableA -> LEFTBRACKET exp RIGHTBRACKET variableB .)
    IF              reduce using rule 88 (variableA -> LEFTBRACKET exp RIGHTBRACKET variableB .)
    FROM            reduce using rule 88 (variableA -> LEFTBRACKET exp RIGHTBRACKET variableB .)
    RIGHTCURLY      reduce using rule 88 (variableA -> LEFTBRACKET exp RIGHTBRACKET variableB .)
    RIGHTBRACKET    reduce using rule 88 (variableA -> LEFTBRACKET exp RIGHTBRACKET variableB .)
    DO              reduce using rule 88 (variableA -> LEFTBRACKET exp RIGHTBRACKET variableB .)
    COMMA           reduce using rule 88 (variableA -> LEFTBRACKET exp RIGHTBRACKET variableB .)


state 187

    (91) variableB -> empty .

    ASSIGNOP        reduce using rule 91 (variableB -> empty .)
    MULOP           reduce using rule 91 (variableB -> empty .)
    DIVOP           reduce using rule 91 (variableB -> empty .)
    SUMOP           reduce using rule 91 (variableB -> empty .)
    SUBOP           reduce using rule 91 (variableB -> empty .)
    LESSTHANOP      reduce using rule 91 (variableB -> empty .)
    GREATERTHANOP   reduce using rule 91 (variableB -> empty .)
    DIFFERENTOP     reduce using rule 91 (variableB -> empty .)
    EQUALOP         reduce using rule 91 (variableB -> empty .)
    ANDOP           reduce using rule 91 (variableB -> empty .)
    OROP            reduce using rule 91 (variableB -> empty .)
    TO              reduce using rule 91 (variableB -> empty .)
    RIGHTPAR        reduce using rule 91 (variableB -> empty .)
    ID              reduce using rule 91 (variableB -> empty .)
    READ            reduce using rule 91 (variableB -> empty .)
    WRITE           reduce using rule 91 (variableB -> empty .)
    IF              reduce using rule 91 (variableB -> empty .)
    FROM            reduce using rule 91 (variableB -> empty .)
    RIGHTCURLY      reduce using rule 91 (variableB -> empty .)
    RIGHTBRACKET    reduce using rule 91 (variableB -> empty .)
    DO              reduce using rule 91 (variableB -> empty .)
    COMMA           reduce using rule 91 (variableB -> empty .)


state 188

    (69) escritura -> WRITE escrituraNP1 LEFTPAR loeNP2 escrituraA escrituraB . RIGHTPAR escrituraNP3

    RIGHTPAR        shift and go to state 208


state 189

    (77) escrituraB -> COMMA . escrituraA escrituraB
    (73) escrituraA -> . exp loeNP1
    (74) escrituraA -> . CTSTRING escrituraNP2
    (92) exp -> . exp1 expA
    (96) exp1 -> . exp2 exp1A
    (100) exp2 -> . exp3 exp2A
    (108) exp3 -> . termino exp3A
    (114) termino -> . terminoC terminoA
    (120) terminoC -> . factor
    (121) terminoC -> . llamada
    (122) factor -> . LEFTPAR operNP1 exp RIGHTPAR factorNP1
    (123) factor -> . CTI factorNP2
    (124) factor -> . CTF factorNP3
    (125) factor -> . variable
    (60) llamada -> . ID llamadaNP1 LEFTPAR loeNP2 primerparam llamadaA RIGHTPAR llamadaNP3
    (86) variable -> . ID variableNP1 variableA

    CTSTRING        shift and go to state 162
    LEFTPAR         shift and go to state 87
    CTI             shift and go to state 88
    CTF             shift and go to state 89
    ID              shift and go to state 63

    escrituraA                     shift and go to state 209
    exp                            shift and go to state 161
    exp1                           shift and go to state 80
    exp2                           shift and go to state 81
    exp3                           shift and go to state 82
    termino                        shift and go to state 83
    terminoC                       shift and go to state 84
    factor                         shift and go to state 85
    llamada                        shift and go to state 86
    variable                       shift and go to state 90

state 190

    (78) escrituraB -> empty .

    RIGHTPAR        reduce using rule 78 (escrituraB -> empty .)


state 191

    (73) escrituraA -> exp loeNP1 .

    COMMA           reduce using rule 73 (escrituraA -> exp loeNP1 .)
    RIGHTPAR        reduce using rule 73 (escrituraA -> exp loeNP1 .)


state 192

    (74) escrituraA -> CTSTRING escrituraNP2 .

    COMMA           reduce using rule 74 (escrituraA -> CTSTRING escrituraNP2 .)
    RIGHTPAR        reduce using rule 74 (escrituraA -> CTSTRING escrituraNP2 .)


state 193

    (79) condicion -> IF LEFTPAR exp condicionNP1 RIGHTPAR bloque . condicionA
    (81) condicionA -> . ELSE condicionANP1 bloque condicionANP2
    (82) condicionA -> . empty
    (130) empty -> .

    ELSE            shift and go to state 211
    ID              reduce using rule 130 (empty -> .)
    READ            reduce using rule 130 (empty -> .)
    WRITE           reduce using rule 130 (empty -> .)
    IF              reduce using rule 130 (empty -> .)
    FROM            reduce using rule 130 (empty -> .)
    RIGHTCURLY      reduce using rule 130 (empty -> .)

    condicionA                     shift and go to state 210
    empty                          shift and go to state 212

state 194

    (85) ciclo -> FROM exp TO exp DO bloque .

    ID              reduce using rule 85 (ciclo -> FROM exp TO exp DO bloque .)
    READ            reduce using rule 85 (ciclo -> FROM exp TO exp DO bloque .)
    WRITE           reduce using rule 85 (ciclo -> FROM exp TO exp DO bloque .)
    IF              reduce using rule 85 (ciclo -> FROM exp TO exp DO bloque .)
    FROM            reduce using rule 85 (ciclo -> FROM exp TO exp DO bloque .)
    RIGHTCURLY      reduce using rule 85 (ciclo -> FROM exp TO exp DO bloque .)


state 195

    (94) expA -> OROP operNP1 exp1 expNP1 . expA
    (94) expA -> . OROP operNP1 exp1 expNP1 expA
    (95) expA -> . empty
    (130) empty -> .

    OROP            shift and go to state 110
    TO              reduce using rule 130 (empty -> .)
    RIGHTPAR        reduce using rule 130 (empty -> .)
    ID              reduce using rule 130 (empty -> .)
    READ            reduce using rule 130 (empty -> .)
    WRITE           reduce using rule 130 (empty -> .)
    IF              reduce using rule 130 (empty -> .)
    FROM            reduce using rule 130 (empty -> .)
    RIGHTCURLY      reduce using rule 130 (empty -> .)
    RIGHTBRACKET    reduce using rule 130 (empty -> .)
    DO              reduce using rule 130 (empty -> .)
    COMMA           reduce using rule 130 (empty -> .)

    expA                           shift and go to state 213
    empty                          shift and go to state 111

state 196

    (98) exp1A -> ANDOP operNP1 exp2 exp1NP1 . exp1A
    (98) exp1A -> . ANDOP operNP1 exp2 exp1NP1 exp1A
    (99) exp1A -> . empty
    (130) empty -> .

    ANDOP           shift and go to state 113
    OROP            reduce using rule 130 (empty -> .)
    TO              reduce using rule 130 (empty -> .)
    RIGHTPAR        reduce using rule 130 (empty -> .)
    ID              reduce using rule 130 (empty -> .)
    READ            reduce using rule 130 (empty -> .)
    WRITE           reduce using rule 130 (empty -> .)
    IF              reduce using rule 130 (empty -> .)
    FROM            reduce using rule 130 (empty -> .)
    RIGHTCURLY      reduce using rule 130 (empty -> .)
    RIGHTBRACKET    reduce using rule 130 (empty -> .)
    DO              reduce using rule 130 (empty -> .)
    COMMA           reduce using rule 130 (empty -> .)

    exp1A                          shift and go to state 214
    empty                          shift and go to state 114

state 197

    (101) exp2A -> exp2B operNP1 exp3 exp2ANP1 .

    ANDOP           reduce using rule 101 (exp2A -> exp2B operNP1 exp3 exp2ANP1 .)
    OROP            reduce using rule 101 (exp2A -> exp2B operNP1 exp3 exp2ANP1 .)
    TO              reduce using rule 101 (exp2A -> exp2B operNP1 exp3 exp2ANP1 .)
    RIGHTPAR        reduce using rule 101 (exp2A -> exp2B operNP1 exp3 exp2ANP1 .)
    ID              reduce using rule 101 (exp2A -> exp2B operNP1 exp3 exp2ANP1 .)
    READ            reduce using rule 101 (exp2A -> exp2B operNP1 exp3 exp2ANP1 .)
    WRITE           reduce using rule 101 (exp2A -> exp2B operNP1 exp3 exp2ANP1 .)
    IF              reduce using rule 101 (exp2A -> exp2B operNP1 exp3 exp2ANP1 .)
    FROM            reduce using rule 101 (exp2A -> exp2B operNP1 exp3 exp2ANP1 .)
    RIGHTCURLY      reduce using rule 101 (exp2A -> exp2B operNP1 exp3 exp2ANP1 .)
    RIGHTBRACKET    reduce using rule 101 (exp2A -> exp2B operNP1 exp3 exp2ANP1 .)
    DO              reduce using rule 101 (exp2A -> exp2B operNP1 exp3 exp2ANP1 .)
    COMMA           reduce using rule 101 (exp2A -> exp2B operNP1 exp3 exp2ANP1 .)


state 198

    (110) exp3A -> exp3B operNP1 termino exp3NP1 . exp3A
    (110) exp3A -> . exp3B operNP1 termino exp3NP1 exp3A
    (111) exp3A -> . empty
    (112) exp3B -> . SUMOP
    (113) exp3B -> . SUBOP
    (130) empty -> .

    SUMOP           shift and go to state 125
    SUBOP           shift and go to state 126
    LESSTHANOP      reduce using rule 130 (empty -> .)
    GREATERTHANOP   reduce using rule 130 (empty -> .)
    DIFFERENTOP     reduce using rule 130 (empty -> .)
    EQUALOP         reduce using rule 130 (empty -> .)
    ANDOP           reduce using rule 130 (empty -> .)
    OROP            reduce using rule 130 (empty -> .)
    TO              reduce using rule 130 (empty -> .)
    RIGHTPAR        reduce using rule 130 (empty -> .)
    ID              reduce using rule 130 (empty -> .)
    READ            reduce using rule 130 (empty -> .)
    WRITE           reduce using rule 130 (empty -> .)
    IF              reduce using rule 130 (empty -> .)
    FROM            reduce using rule 130 (empty -> .)
    RIGHTCURLY      reduce using rule 130 (empty -> .)
    RIGHTBRACKET    reduce using rule 130 (empty -> .)
    DO              reduce using rule 130 (empty -> .)
    COMMA           reduce using rule 130 (empty -> .)

    exp3B                          shift and go to state 123
    exp3A                          shift and go to state 215
    empty                          shift and go to state 124

state 199

    (115) terminoA -> terminoB operNP1 terminoC terminoANP1 . terminoA
    (115) terminoA -> . terminoB operNP1 terminoC terminoANP1 terminoA
    (116) terminoA -> . empty
    (118) terminoB -> . MULOP
    (119) terminoB -> . DIVOP
    (130) empty -> .

    MULOP           shift and go to state 130
    DIVOP           shift and go to state 131
    SUMOP           reduce using rule 130 (empty -> .)
    SUBOP           reduce using rule 130 (empty -> .)
    LESSTHANOP      reduce using rule 130 (empty -> .)
    GREATERTHANOP   reduce using rule 130 (empty -> .)
    DIFFERENTOP     reduce using rule 130 (empty -> .)
    EQUALOP         reduce using rule 130 (empty -> .)
    ANDOP           reduce using rule 130 (empty -> .)
    OROP            reduce using rule 130 (empty -> .)
    TO              reduce using rule 130 (empty -> .)
    RIGHTPAR        reduce using rule 130 (empty -> .)
    ID              reduce using rule 130 (empty -> .)
    READ            reduce using rule 130 (empty -> .)
    WRITE           reduce using rule 130 (empty -> .)
    IF              reduce using rule 130 (empty -> .)
    FROM            reduce using rule 130 (empty -> .)
    RIGHTCURLY      reduce using rule 130 (empty -> .)
    RIGHTBRACKET    reduce using rule 130 (empty -> .)
    DO              reduce using rule 130 (empty -> .)
    COMMA           reduce using rule 130 (empty -> .)

    terminoB                       shift and go to state 128
    terminoA                       shift and go to state 216
    empty                          shift and go to state 129

state 200

    (122) factor -> LEFTPAR operNP1 exp RIGHTPAR factorNP1 .

    MULOP           reduce using rule 122 (factor -> LEFTPAR operNP1 exp RIGHTPAR factorNP1 .)
    DIVOP           reduce using rule 122 (factor -> LEFTPAR operNP1 exp RIGHTPAR factorNP1 .)
    SUMOP           reduce using rule 122 (factor -> LEFTPAR operNP1 exp RIGHTPAR factorNP1 .)
    SUBOP           reduce using rule 122 (factor -> LEFTPAR operNP1 exp RIGHTPAR factorNP1 .)
    LESSTHANOP      reduce using rule 122 (factor -> LEFTPAR operNP1 exp RIGHTPAR factorNP1 .)
    GREATERTHANOP   reduce using rule 122 (factor -> LEFTPAR operNP1 exp RIGHTPAR factorNP1 .)
    DIFFERENTOP     reduce using rule 122 (factor -> LEFTPAR operNP1 exp RIGHTPAR factorNP1 .)
    EQUALOP         reduce using rule 122 (factor -> LEFTPAR operNP1 exp RIGHTPAR factorNP1 .)
    ANDOP           reduce using rule 122 (factor -> LEFTPAR operNP1 exp RIGHTPAR factorNP1 .)
    OROP            reduce using rule 122 (factor -> LEFTPAR operNP1 exp RIGHTPAR factorNP1 .)
    TO              reduce using rule 122 (factor -> LEFTPAR operNP1 exp RIGHTPAR factorNP1 .)
    RIGHTPAR        reduce using rule 122 (factor -> LEFTPAR operNP1 exp RIGHTPAR factorNP1 .)
    ID              reduce using rule 122 (factor -> LEFTPAR operNP1 exp RIGHTPAR factorNP1 .)
    READ            reduce using rule 122 (factor -> LEFTPAR operNP1 exp RIGHTPAR factorNP1 .)
    WRITE           reduce using rule 122 (factor -> LEFTPAR operNP1 exp RIGHTPAR factorNP1 .)
    IF              reduce using rule 122 (factor -> LEFTPAR operNP1 exp RIGHTPAR factorNP1 .)
    FROM            reduce using rule 122 (factor -> LEFTPAR operNP1 exp RIGHTPAR factorNP1 .)
    RIGHTCURLY      reduce using rule 122 (factor -> LEFTPAR operNP1 exp RIGHTPAR factorNP1 .)
    RIGHTBRACKET    reduce using rule 122 (factor -> LEFTPAR operNP1 exp RIGHTPAR factorNP1 .)
    DO              reduce using rule 122 (factor -> LEFTPAR operNP1 exp RIGHTPAR factorNP1 .)
    COMMA           reduce using rule 122 (factor -> LEFTPAR operNP1 exp RIGHTPAR factorNP1 .)


state 201

    (27) funcion -> FUNC funcionA funcionNP1 ID funcionNP2 LEFTPAR funcionB RIGHTPAR SEMICOLON funcionC bloque .

    FUNC            reduce using rule 27 (funcion -> FUNC funcionA funcionNP1 ID funcionNP2 LEFTPAR funcionB RIGHTPAR SEMICOLON funcionC bloque .)
    MAINSTART       reduce using rule 27 (funcion -> FUNC funcionA funcionNP1 ID funcionNP2 LEFTPAR funcionB RIGHTPAR SEMICOLON funcionC bloque .)


state 202

    (43) paramsA -> COMMA tipoSimple . paramsNP1 ID paramsA
    (45) paramsNP1 -> .

    ID              reduce using rule 45 (paramsNP1 -> .)

    paramsNP1                      shift and go to state 217

state 203

    (22) varsE -> COMMA ID varsNP3 varsNP6 varsE .

    SEMICOLON       reduce using rule 22 (varsE -> COMMA ID varsNP3 varsNP6 varsE .)


state 204

    (19) varsD -> LEFTBRACKET CTI . varsNP5 RIGHTBRACKET
    (21) varsNP5 -> .

    RIGHTBRACKET    reduce using rule 21 (varsNP5 -> .)

    varsNP5                        shift and go to state 218

state 205

    (60) llamada -> ID llamadaNP1 LEFTPAR loeNP2 primerparam llamadaA RIGHTPAR . llamadaNP3
    (66) llamadaNP3 -> .

    ID              reduce using rule 66 (llamadaNP3 -> .)
    READ            reduce using rule 66 (llamadaNP3 -> .)
    WRITE           reduce using rule 66 (llamadaNP3 -> .)
    IF              reduce using rule 66 (llamadaNP3 -> .)
    FROM            reduce using rule 66 (llamadaNP3 -> .)
    RIGHTCURLY      reduce using rule 66 (llamadaNP3 -> .)
    MULOP           reduce using rule 66 (llamadaNP3 -> .)
    DIVOP           reduce using rule 66 (llamadaNP3 -> .)
    SUMOP           reduce using rule 66 (llamadaNP3 -> .)
    SUBOP           reduce using rule 66 (llamadaNP3 -> .)
    LESSTHANOP      reduce using rule 66 (llamadaNP3 -> .)
    GREATERTHANOP   reduce using rule 66 (llamadaNP3 -> .)
    DIFFERENTOP     reduce using rule 66 (llamadaNP3 -> .)
    EQUALOP         reduce using rule 66 (llamadaNP3 -> .)
    ANDOP           reduce using rule 66 (llamadaNP3 -> .)
    OROP            reduce using rule 66 (llamadaNP3 -> .)
    TO              reduce using rule 66 (llamadaNP3 -> .)
    RIGHTPAR        reduce using rule 66 (llamadaNP3 -> .)
    RIGHTBRACKET    reduce using rule 66 (llamadaNP3 -> .)
    DO              reduce using rule 66 (llamadaNP3 -> .)
    COMMA           reduce using rule 66 (llamadaNP3 -> .)

    llamadaNP3                     shift and go to state 219

state 206

    (63) llamadaA -> COMMA exp . loeNP1 llamadaA
    (75) loeNP1 -> .

    COMMA           reduce using rule 75 (loeNP1 -> .)
    RIGHTPAR        reduce using rule 75 (loeNP1 -> .)

    loeNP1                         shift and go to state 220

state 207

    (90) variableB -> LEFTBRACKET exp . RIGHTBRACKET

    RIGHTBRACKET    shift and go to state 221


state 208

    (69) escritura -> WRITE escrituraNP1 LEFTPAR loeNP2 escrituraA escrituraB RIGHTPAR . escrituraNP3
    (71) escrituraNP3 -> .

    ID              reduce using rule 71 (escrituraNP3 -> .)
    READ            reduce using rule 71 (escrituraNP3 -> .)
    WRITE           reduce using rule 71 (escrituraNP3 -> .)
    IF              reduce using rule 71 (escrituraNP3 -> .)
    FROM            reduce using rule 71 (escrituraNP3 -> .)
    RIGHTCURLY      reduce using rule 71 (escrituraNP3 -> .)

    escrituraNP3                   shift and go to state 222

state 209

    (77) escrituraB -> COMMA escrituraA . escrituraB
    (77) escrituraB -> . COMMA escrituraA escrituraB
    (78) escrituraB -> . empty
    (130) empty -> .

    COMMA           shift and go to state 189
    RIGHTPAR        reduce using rule 130 (empty -> .)

    escrituraB                     shift and go to state 223
    empty                          shift and go to state 190

state 210

    (79) condicion -> IF LEFTPAR exp condicionNP1 RIGHTPAR bloque condicionA .

    ID              reduce using rule 79 (condicion -> IF LEFTPAR exp condicionNP1 RIGHTPAR bloque condicionA .)
    READ            reduce using rule 79 (condicion -> IF LEFTPAR exp condicionNP1 RIGHTPAR bloque condicionA .)
    WRITE           reduce using rule 79 (condicion -> IF LEFTPAR exp condicionNP1 RIGHTPAR bloque condicionA .)
    IF              reduce using rule 79 (condicion -> IF LEFTPAR exp condicionNP1 RIGHTPAR bloque condicionA .)
    FROM            reduce using rule 79 (condicion -> IF LEFTPAR exp condicionNP1 RIGHTPAR bloque condicionA .)
    RIGHTCURLY      reduce using rule 79 (condicion -> IF LEFTPAR exp condicionNP1 RIGHTPAR bloque condicionA .)


state 211

    (81) condicionA -> ELSE . condicionANP1 bloque condicionANP2
    (83) condicionANP1 -> .

    LEFTCURLY       reduce using rule 83 (condicionANP1 -> .)

    condicionANP1                  shift and go to state 224

state 212

    (82) condicionA -> empty .

    ID              reduce using rule 82 (condicionA -> empty .)
    READ            reduce using rule 82 (condicionA -> empty .)
    WRITE           reduce using rule 82 (condicionA -> empty .)
    IF              reduce using rule 82 (condicionA -> empty .)
    FROM            reduce using rule 82 (condicionA -> empty .)
    RIGHTCURLY      reduce using rule 82 (condicionA -> empty .)


state 213

    (94) expA -> OROP operNP1 exp1 expNP1 expA .

    TO              reduce using rule 94 (expA -> OROP operNP1 exp1 expNP1 expA .)
    RIGHTPAR        reduce using rule 94 (expA -> OROP operNP1 exp1 expNP1 expA .)
    ID              reduce using rule 94 (expA -> OROP operNP1 exp1 expNP1 expA .)
    READ            reduce using rule 94 (expA -> OROP operNP1 exp1 expNP1 expA .)
    WRITE           reduce using rule 94 (expA -> OROP operNP1 exp1 expNP1 expA .)
    IF              reduce using rule 94 (expA -> OROP operNP1 exp1 expNP1 expA .)
    FROM            reduce using rule 94 (expA -> OROP operNP1 exp1 expNP1 expA .)
    RIGHTCURLY      reduce using rule 94 (expA -> OROP operNP1 exp1 expNP1 expA .)
    RIGHTBRACKET    reduce using rule 94 (expA -> OROP operNP1 exp1 expNP1 expA .)
    DO              reduce using rule 94 (expA -> OROP operNP1 exp1 expNP1 expA .)
    COMMA           reduce using rule 94 (expA -> OROP operNP1 exp1 expNP1 expA .)


state 214

    (98) exp1A -> ANDOP operNP1 exp2 exp1NP1 exp1A .

    OROP            reduce using rule 98 (exp1A -> ANDOP operNP1 exp2 exp1NP1 exp1A .)
    TO              reduce using rule 98 (exp1A -> ANDOP operNP1 exp2 exp1NP1 exp1A .)
    RIGHTPAR        reduce using rule 98 (exp1A -> ANDOP operNP1 exp2 exp1NP1 exp1A .)
    ID              reduce using rule 98 (exp1A -> ANDOP operNP1 exp2 exp1NP1 exp1A .)
    READ            reduce using rule 98 (exp1A -> ANDOP operNP1 exp2 exp1NP1 exp1A .)
    WRITE           reduce using rule 98 (exp1A -> ANDOP operNP1 exp2 exp1NP1 exp1A .)
    IF              reduce using rule 98 (exp1A -> ANDOP operNP1 exp2 exp1NP1 exp1A .)
    FROM            reduce using rule 98 (exp1A -> ANDOP operNP1 exp2 exp1NP1 exp1A .)
    RIGHTCURLY      reduce using rule 98 (exp1A -> ANDOP operNP1 exp2 exp1NP1 exp1A .)
    RIGHTBRACKET    reduce using rule 98 (exp1A -> ANDOP operNP1 exp2 exp1NP1 exp1A .)
    DO              reduce using rule 98 (exp1A -> ANDOP operNP1 exp2 exp1NP1 exp1A .)
    COMMA           reduce using rule 98 (exp1A -> ANDOP operNP1 exp2 exp1NP1 exp1A .)


state 215

    (110) exp3A -> exp3B operNP1 termino exp3NP1 exp3A .

    LESSTHANOP      reduce using rule 110 (exp3A -> exp3B operNP1 termino exp3NP1 exp3A .)
    GREATERTHANOP   reduce using rule 110 (exp3A -> exp3B operNP1 termino exp3NP1 exp3A .)
    DIFFERENTOP     reduce using rule 110 (exp3A -> exp3B operNP1 termino exp3NP1 exp3A .)
    EQUALOP         reduce using rule 110 (exp3A -> exp3B operNP1 termino exp3NP1 exp3A .)
    ANDOP           reduce using rule 110 (exp3A -> exp3B operNP1 termino exp3NP1 exp3A .)
    OROP            reduce using rule 110 (exp3A -> exp3B operNP1 termino exp3NP1 exp3A .)
    TO              reduce using rule 110 (exp3A -> exp3B operNP1 termino exp3NP1 exp3A .)
    RIGHTPAR        reduce using rule 110 (exp3A -> exp3B operNP1 termino exp3NP1 exp3A .)
    ID              reduce using rule 110 (exp3A -> exp3B operNP1 termino exp3NP1 exp3A .)
    READ            reduce using rule 110 (exp3A -> exp3B operNP1 termino exp3NP1 exp3A .)
    WRITE           reduce using rule 110 (exp3A -> exp3B operNP1 termino exp3NP1 exp3A .)
    IF              reduce using rule 110 (exp3A -> exp3B operNP1 termino exp3NP1 exp3A .)
    FROM            reduce using rule 110 (exp3A -> exp3B operNP1 termino exp3NP1 exp3A .)
    RIGHTCURLY      reduce using rule 110 (exp3A -> exp3B operNP1 termino exp3NP1 exp3A .)
    RIGHTBRACKET    reduce using rule 110 (exp3A -> exp3B operNP1 termino exp3NP1 exp3A .)
    DO              reduce using rule 110 (exp3A -> exp3B operNP1 termino exp3NP1 exp3A .)
    COMMA           reduce using rule 110 (exp3A -> exp3B operNP1 termino exp3NP1 exp3A .)


state 216

    (115) terminoA -> terminoB operNP1 terminoC terminoANP1 terminoA .

    SUMOP           reduce using rule 115 (terminoA -> terminoB operNP1 terminoC terminoANP1 terminoA .)
    SUBOP           reduce using rule 115 (terminoA -> terminoB operNP1 terminoC terminoANP1 terminoA .)
    LESSTHANOP      reduce using rule 115 (terminoA -> terminoB operNP1 terminoC terminoANP1 terminoA .)
    GREATERTHANOP   reduce using rule 115 (terminoA -> terminoB operNP1 terminoC terminoANP1 terminoA .)
    DIFFERENTOP     reduce using rule 115 (terminoA -> terminoB operNP1 terminoC terminoANP1 terminoA .)
    EQUALOP         reduce using rule 115 (terminoA -> terminoB operNP1 terminoC terminoANP1 terminoA .)
    ANDOP           reduce using rule 115 (terminoA -> terminoB operNP1 terminoC terminoANP1 terminoA .)
    OROP            reduce using rule 115 (terminoA -> terminoB operNP1 terminoC terminoANP1 terminoA .)
    TO              reduce using rule 115 (terminoA -> terminoB operNP1 terminoC terminoANP1 terminoA .)
    RIGHTPAR        reduce using rule 115 (terminoA -> terminoB operNP1 terminoC terminoANP1 terminoA .)
    ID              reduce using rule 115 (terminoA -> terminoB operNP1 terminoC terminoANP1 terminoA .)
    READ            reduce using rule 115 (terminoA -> terminoB operNP1 terminoC terminoANP1 terminoA .)
    WRITE           reduce using rule 115 (terminoA -> terminoB operNP1 terminoC terminoANP1 terminoA .)
    IF              reduce using rule 115 (terminoA -> terminoB operNP1 terminoC terminoANP1 terminoA .)
    FROM            reduce using rule 115 (terminoA -> terminoB operNP1 terminoC terminoANP1 terminoA .)
    RIGHTCURLY      reduce using rule 115 (terminoA -> terminoB operNP1 terminoC terminoANP1 terminoA .)
    RIGHTBRACKET    reduce using rule 115 (terminoA -> terminoB operNP1 terminoC terminoANP1 terminoA .)
    DO              reduce using rule 115 (terminoA -> terminoB operNP1 terminoC terminoANP1 terminoA .)
    COMMA           reduce using rule 115 (terminoA -> terminoB operNP1 terminoC terminoANP1 terminoA .)


state 217

    (43) paramsA -> COMMA tipoSimple paramsNP1 . ID paramsA

    ID              shift and go to state 225


state 218

    (19) varsD -> LEFTBRACKET CTI varsNP5 . RIGHTBRACKET

    RIGHTBRACKET    shift and go to state 226


state 219

    (60) llamada -> ID llamadaNP1 LEFTPAR loeNP2 primerparam llamadaA RIGHTPAR llamadaNP3 .

    ID              reduce using rule 60 (llamada -> ID llamadaNP1 LEFTPAR loeNP2 primerparam llamadaA RIGHTPAR llamadaNP3 .)
    READ            reduce using rule 60 (llamada -> ID llamadaNP1 LEFTPAR loeNP2 primerparam llamadaA RIGHTPAR llamadaNP3 .)
    WRITE           reduce using rule 60 (llamada -> ID llamadaNP1 LEFTPAR loeNP2 primerparam llamadaA RIGHTPAR llamadaNP3 .)
    IF              reduce using rule 60 (llamada -> ID llamadaNP1 LEFTPAR loeNP2 primerparam llamadaA RIGHTPAR llamadaNP3 .)
    FROM            reduce using rule 60 (llamada -> ID llamadaNP1 LEFTPAR loeNP2 primerparam llamadaA RIGHTPAR llamadaNP3 .)
    RIGHTCURLY      reduce using rule 60 (llamada -> ID llamadaNP1 LEFTPAR loeNP2 primerparam llamadaA RIGHTPAR llamadaNP3 .)
    MULOP           reduce using rule 60 (llamada -> ID llamadaNP1 LEFTPAR loeNP2 primerparam llamadaA RIGHTPAR llamadaNP3 .)
    DIVOP           reduce using rule 60 (llamada -> ID llamadaNP1 LEFTPAR loeNP2 primerparam llamadaA RIGHTPAR llamadaNP3 .)
    SUMOP           reduce using rule 60 (llamada -> ID llamadaNP1 LEFTPAR loeNP2 primerparam llamadaA RIGHTPAR llamadaNP3 .)
    SUBOP           reduce using rule 60 (llamada -> ID llamadaNP1 LEFTPAR loeNP2 primerparam llamadaA RIGHTPAR llamadaNP3 .)
    LESSTHANOP      reduce using rule 60 (llamada -> ID llamadaNP1 LEFTPAR loeNP2 primerparam llamadaA RIGHTPAR llamadaNP3 .)
    GREATERTHANOP   reduce using rule 60 (llamada -> ID llamadaNP1 LEFTPAR loeNP2 primerparam llamadaA RIGHTPAR llamadaNP3 .)
    DIFFERENTOP     reduce using rule 60 (llamada -> ID llamadaNP1 LEFTPAR loeNP2 primerparam llamadaA RIGHTPAR llamadaNP3 .)
    EQUALOP         reduce using rule 60 (llamada -> ID llamadaNP1 LEFTPAR loeNP2 primerparam llamadaA RIGHTPAR llamadaNP3 .)
    ANDOP           reduce using rule 60 (llamada -> ID llamadaNP1 LEFTPAR loeNP2 primerparam llamadaA RIGHTPAR llamadaNP3 .)
    OROP            reduce using rule 60 (llamada -> ID llamadaNP1 LEFTPAR loeNP2 primerparam llamadaA RIGHTPAR llamadaNP3 .)
    TO              reduce using rule 60 (llamada -> ID llamadaNP1 LEFTPAR loeNP2 primerparam llamadaA RIGHTPAR llamadaNP3 .)
    RIGHTPAR        reduce using rule 60 (llamada -> ID llamadaNP1 LEFTPAR loeNP2 primerparam llamadaA RIGHTPAR llamadaNP3 .)
    RIGHTBRACKET    reduce using rule 60 (llamada -> ID llamadaNP1 LEFTPAR loeNP2 primerparam llamadaA RIGHTPAR llamadaNP3 .)
    DO              reduce using rule 60 (llamada -> ID llamadaNP1 LEFTPAR loeNP2 primerparam llamadaA RIGHTPAR llamadaNP3 .)
    COMMA           reduce using rule 60 (llamada -> ID llamadaNP1 LEFTPAR loeNP2 primerparam llamadaA RIGHTPAR llamadaNP3 .)


state 220

    (63) llamadaA -> COMMA exp loeNP1 . llamadaA
    (63) llamadaA -> . COMMA exp loeNP1 llamadaA
    (64) llamadaA -> . empty
    (130) empty -> .

    COMMA           shift and go to state 182
    RIGHTPAR        reduce using rule 130 (empty -> .)

    llamadaA                       shift and go to state 227
    empty                          shift and go to state 183

state 221

    (90) variableB -> LEFTBRACKET exp RIGHTBRACKET .

    ASSIGNOP        reduce using rule 90 (variableB -> LEFTBRACKET exp RIGHTBRACKET .)
    MULOP           reduce using rule 90 (variableB -> LEFTBRACKET exp RIGHTBRACKET .)
    DIVOP           reduce using rule 90 (variableB -> LEFTBRACKET exp RIGHTBRACKET .)
    SUMOP           reduce using rule 90 (variableB -> LEFTBRACKET exp RIGHTBRACKET .)
    SUBOP           reduce using rule 90 (variableB -> LEFTBRACKET exp RIGHTBRACKET .)
    LESSTHANOP      reduce using rule 90 (variableB -> LEFTBRACKET exp RIGHTBRACKET .)
    GREATERTHANOP   reduce using rule 90 (variableB -> LEFTBRACKET exp RIGHTBRACKET .)
    DIFFERENTOP     reduce using rule 90 (variableB -> LEFTBRACKET exp RIGHTBRACKET .)
    EQUALOP         reduce using rule 90 (variableB -> LEFTBRACKET exp RIGHTBRACKET .)
    ANDOP           reduce using rule 90 (variableB -> LEFTBRACKET exp RIGHTBRACKET .)
    OROP            reduce using rule 90 (variableB -> LEFTBRACKET exp RIGHTBRACKET .)
    TO              reduce using rule 90 (variableB -> LEFTBRACKET exp RIGHTBRACKET .)
    RIGHTPAR        reduce using rule 90 (variableB -> LEFTBRACKET exp RIGHTBRACKET .)
    ID              reduce using rule 90 (variableB -> LEFTBRACKET exp RIGHTBRACKET .)
    READ            reduce using rule 90 (variableB -> LEFTBRACKET exp RIGHTBRACKET .)
    WRITE           reduce using rule 90 (variableB -> LEFTBRACKET exp RIGHTBRACKET .)
    IF              reduce using rule 90 (variableB -> LEFTBRACKET exp RIGHTBRACKET .)
    FROM            reduce using rule 90 (variableB -> LEFTBRACKET exp RIGHTBRACKET .)
    RIGHTCURLY      reduce using rule 90 (variableB -> LEFTBRACKET exp RIGHTBRACKET .)
    RIGHTBRACKET    reduce using rule 90 (variableB -> LEFTBRACKET exp RIGHTBRACKET .)
    DO              reduce using rule 90 (variableB -> LEFTBRACKET exp RIGHTBRACKET .)
    COMMA           reduce using rule 90 (variableB -> LEFTBRACKET exp RIGHTBRACKET .)


state 222

    (69) escritura -> WRITE escrituraNP1 LEFTPAR loeNP2 escrituraA escrituraB RIGHTPAR escrituraNP3 .

    ID              reduce using rule 69 (escritura -> WRITE escrituraNP1 LEFTPAR loeNP2 escrituraA escrituraB RIGHTPAR escrituraNP3 .)
    READ            reduce using rule 69 (escritura -> WRITE escrituraNP1 LEFTPAR loeNP2 escrituraA escrituraB RIGHTPAR escrituraNP3 .)
    WRITE           reduce using rule 69 (escritura -> WRITE escrituraNP1 LEFTPAR loeNP2 escrituraA escrituraB RIGHTPAR escrituraNP3 .)
    IF              reduce using rule 69 (escritura -> WRITE escrituraNP1 LEFTPAR loeNP2 escrituraA escrituraB RIGHTPAR escrituraNP3 .)
    FROM            reduce using rule 69 (escritura -> WRITE escrituraNP1 LEFTPAR loeNP2 escrituraA escrituraB RIGHTPAR escrituraNP3 .)
    RIGHTCURLY      reduce using rule 69 (escritura -> WRITE escrituraNP1 LEFTPAR loeNP2 escrituraA escrituraB RIGHTPAR escrituraNP3 .)


state 223

    (77) escrituraB -> COMMA escrituraA escrituraB .

    RIGHTPAR        reduce using rule 77 (escrituraB -> COMMA escrituraA escrituraB .)


state 224

    (81) condicionA -> ELSE condicionANP1 . bloque condicionANP2
    (46) bloque -> . LEFTCURLY bloqueA RIGHTCURLY

    LEFTCURLY       shift and go to state 39

    bloque                         shift and go to state 228

state 225

    (43) paramsA -> COMMA tipoSimple paramsNP1 ID . paramsA
    (43) paramsA -> . COMMA tipoSimple paramsNP1 ID paramsA
    (44) paramsA -> . empty
    (130) empty -> .

    COMMA           shift and go to state 175
    RIGHTPAR        reduce using rule 130 (empty -> .)

    paramsA                        shift and go to state 229
    empty                          shift and go to state 176

state 226

    (19) varsD -> LEFTBRACKET CTI varsNP5 RIGHTBRACKET .

    SEMICOLON       reduce using rule 19 (varsD -> LEFTBRACKET CTI varsNP5 RIGHTBRACKET .)


state 227

    (63) llamadaA -> COMMA exp loeNP1 llamadaA .

    RIGHTPAR        reduce using rule 63 (llamadaA -> COMMA exp loeNP1 llamadaA .)


state 228

    (81) condicionA -> ELSE condicionANP1 bloque . condicionANP2
    (84) condicionANP2 -> .

    ID              reduce using rule 84 (condicionANP2 -> .)
    READ            reduce using rule 84 (condicionANP2 -> .)
    WRITE           reduce using rule 84 (condicionANP2 -> .)
    IF              reduce using rule 84 (condicionANP2 -> .)
    FROM            reduce using rule 84 (condicionANP2 -> .)
    RIGHTCURLY      reduce using rule 84 (condicionANP2 -> .)

    condicionANP2                  shift and go to state 230

state 229

    (43) paramsA -> COMMA tipoSimple paramsNP1 ID paramsA .

    RIGHTPAR        reduce using rule 43 (paramsA -> COMMA tipoSimple paramsNP1 ID paramsA .)


state 230

    (81) condicionA -> ELSE condicionANP1 bloque condicionANP2 .

    ID              reduce using rule 81 (condicionA -> ELSE condicionANP1 bloque condicionANP2 .)
    READ            reduce using rule 81 (condicionA -> ELSE condicionANP1 bloque condicionANP2 .)
    WRITE           reduce using rule 81 (condicionA -> ELSE condicionANP1 bloque condicionANP2 .)
    IF              reduce using rule 81 (condicionA -> ELSE condicionANP1 bloque condicionANP2 .)
    FROM            reduce using rule 81 (condicionA -> ELSE condicionANP1 bloque condicionANP2 .)
    RIGHTCURLY      reduce using rule 81 (condicionA -> ELSE condicionANP1 bloque condicionANP2 .)

